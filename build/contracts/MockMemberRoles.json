{
  "contractName": "MockMemberRoles",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_memberRoleId",
          "type": "uint256"
        }
      ],
      "name": "authorized",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_memberRoleId",
          "type": "uint256"
        }
      ],
      "name": "numberOfMembers",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_toCheck",
          "type": "address"
        }
      ],
      "name": "isAuthorizedToGovern",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_roleName",
          "type": "bytes32"
        },
        {
          "name": "_roleDescription",
          "type": "string"
        },
        {
          "name": "_authorized",
          "type": "address"
        }
      ],
      "name": "addRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_memberAddress",
          "type": "address"
        },
        {
          "name": "_roleId",
          "type": "uint256"
        },
        {
          "name": "_active",
          "type": "bool"
        }
      ],
      "name": "updateRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_initiator",
          "type": "address"
        }
      ],
      "name": "setInititorAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setMasterAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_memberAddress",
          "type": "address"
        },
        {
          "name": "_roleId",
          "type": "uint256"
        }
      ],
      "name": "checkRole",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_memberRoleId",
          "type": "uint256"
        }
      ],
      "name": "members",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "memberArray",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "code",
          "type": "bytes8"
        }
      ],
      "name": "getUintParameters",
      "outputs": [
        {
          "name": "codeVal",
          "type": "bytes8"
        },
        {
          "name": "val",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMemberLengthForAllRoles",
      "outputs": [
        {
          "name": "totalMembers",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalRoles",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_memberAddress",
          "type": "address"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "code",
          "type": "bytes8"
        },
        {
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "updateUintParameters",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_roleId",
          "type": "uint256"
        },
        {
          "name": "_newAuthorized",
          "type": "address"
        }
      ],
      "name": "changeAuthorized",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newABAddress",
          "type": "address"
        },
        {
          "name": "_removeAB",
          "type": "address"
        }
      ],
      "name": "swapABMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_abArray",
          "type": "address[]"
        }
      ],
      "name": "memberRolesInitiate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "masterAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "roleName",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "roleDescription",
          "type": "string"
        }
      ],
      "name": "MemberRole",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "abArray",
          "type": "address[]"
        }
      ],
      "name": "addInitialABMembers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_memberRoleId\",\"type\":\"uint256\"}],\"name\":\"authorized\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_memberRoleId\",\"type\":\"uint256\"}],\"name\":\"numberOfMembers\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_toCheck\",\"type\":\"address\"}],\"name\":\"isAuthorizedToGovern\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_roleName\",\"type\":\"bytes32\"},{\"name\":\"_roleDescription\",\"type\":\"string\"},{\"name\":\"_authorized\",\"type\":\"address\"}],\"name\":\"addRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_memberAddress\",\"type\":\"address\"},{\"name\":\"_roleId\",\"type\":\"uint256\"},{\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"updateRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_initiator\",\"type\":\"address\"}],\"name\":\"setInititorAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setMasterAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_memberAddress\",\"type\":\"address\"},{\"name\":\"_roleId\",\"type\":\"uint256\"}],\"name\":\"checkRole\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_memberRoleId\",\"type\":\"uint256\"}],\"name\":\"members\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"memberArray\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"code\",\"type\":\"bytes8\"}],\"name\":\"getUintParameters\",\"outputs\":[{\"name\":\"codeVal\",\"type\":\"bytes8\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"abArray\",\"type\":\"address[]\"}],\"name\":\"addInitialABMembers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMemberLengthForAllRoles\",\"outputs\":[{\"name\":\"totalMembers\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalRoles\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_memberAddress\",\"type\":\"address\"}],\"name\":\"roles\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"code\",\"type\":\"bytes8\"},{\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"updateUintParameters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_roleId\",\"type\":\"uint256\"},{\"name\":\"_newAuthorized\",\"type\":\"address\"}],\"name\":\"changeAuthorized\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newABAddress\",\"type\":\"address\"},{\"name\":\"_removeAB\",\"type\":\"address\"}],\"name\":\"swapABMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_abArray\",\"type\":\"address[]\"}],\"name\":\"memberRolesInitiate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"masterAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"roleName\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"roleDescription\",\"type\":\"string\"}],\"name\":\"MemberRole\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addInitialABMembers(address[])\":{\"details\":\"is used to add initial advisory board members\",\"params\":{\"abArray\":\"is the list of initial advisory board members\"}},\"addRole(bytes32,string,address)\":{\"details\":\"Adds new member role\",\"params\":{\"_authorized\":\"Authorized member against every role id\",\"_roleDescription\":\"New description hash\",\"_roleName\":\"New role name\"}},\"authorized(uint256)\":{\"details\":\"Return member address who holds the right to add/remove any member from specific role.\"},\"changeAuthorized(uint256,address)\":{\"details\":\"Change Member Address who holds the authority to Add/Delete any member from specific role.\",\"params\":{\"_newAuthorized\":\"New authorized address against role id\",\"_roleId\":\"roleId to update its Authorized Address\"}},\"checkRole(address,uint256)\":{\"details\":\"Returns true if the given role id is assigned to a member.\",\"params\":{\"_memberAddress\":\"Address of member\",\"_roleId\":\"Checks member's authenticity with the roleId. i.e. Returns true if this roleId is assigned to member\"}},\"getMemberLengthForAllRoles()\":{\"details\":\"Return total number of members assigned against each role id.\",\"return\":\"totalMembers Total members in particular role id\"},\"isAuthorizedToGovern(address)\":{\"details\":\"checks if an address is authorized to govern\"},\"memberRolesInitiate(address[])\":{\"details\":\"to initiate the member roles and add initial AB, DR board members\",\"params\":{\"_abArray\":\"is array of addresses of the Initial AB members\"}},\"members(uint256)\":{\"details\":\"Gets the member addresses assigned by a specific role\",\"params\":{\"_memberRoleId\":\"Member role id\"},\"return\":\"roleId Role idallMemberAddress Member addresses of specified role id\"},\"numberOfMembers(uint256)\":{\"details\":\"Gets all members' length\",\"params\":{\"_memberRoleId\":\"Member role id\"},\"return\":\"memberRoleData[_memberRoleId].memberCounter Member length\"},\"roles(address)\":{\"details\":\"Get All role ids array that has been assigned to a member so far.\"},\"setInititorAddress(address)\":{\"details\":\"Set the authorized address to add the initial roles and members\",\"params\":{\"_initiator\":\"is address of the initiator\"}},\"setMasterAddress()\":{\"details\":\"to change the master address\"},\"swapABMember(address,address)\":{\"details\":\"to swap advisory board member\",\"params\":{\"_newABAddress\":\"is address of new AB member\",\"_removeAB\":\"is advisory board member to be removed\"}},\"totalRoles()\":{\"details\":\"Return number of member roles\"},\"updateRole(address,uint256,bool)\":{\"details\":\"Assign or Delete a member from specific role.\",\"params\":{\"_active\":\"active is set to be True if we want to assign this role to member, False otherwise!\",\"_memberAddress\":\"Address of Member\",\"_roleId\":\"RoleId to update\"}},\"updateUintParameters(bytes8,uint256)\":{\"details\":\"Updates Uint Parameters of a code\",\"params\":{\"code\":\"whose details we want to update\",\"val\":\"value to set\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/madan/Documents/PlotX/PlotxContract/contracts/mock/MockMemberRoles.sol\":\"MockMemberRoles\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/madan/Documents/PlotX/PlotxContract/contracts/MemberRoles.sol\":{\"keccak256\":\"0xbf6c213405427654b77b2a92aefbdefdd765c98e7251a5e0375cc5a394362b82\",\"urls\":[\"bzzr://e3c844d74049bab50bc39ae0aba425b30cb4f07e830491b4a6e09564c24bcc9e\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/govblocks-protocol/Governed.sol\":{\"keccak256\":\"0xd4f7eec3339d4def34da340a103949230c46dea4fda9cb4a9a8beac13b9c6f97\",\"urls\":[\"bzzr://4b1bce9df45407fab176505c90483c13cf919600d8f838bd4a3ca9bf20d3d03e\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/govblocks-protocol/interfaces/IMemberRoles.sol\":{\"keccak256\":\"0x1e339091f1fe36eae040ae3a4dbb92433e1724859d8439e6ba8efc1117d3c3ac\",\"urls\":[\"bzzr://29f6e64cd6c7fc6ccb9a3cca6fbd5a0420a148abc1cb3713cbc99383dd4879fd\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/openzeppelin-solidity/math/SafeMath.sol\":{\"keccak256\":\"0x3ebcbbefce817362430b60e9ecaa67fc929f8b80a9d5a7814fa463e4aeed719b\",\"urls\":[\"bzzr://9cd2986ef600b1f67600dbb728055c24a5adabdc1aa23dc1236c91694400fc42\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/proxy/OwnedUpgradeabilityProxy.sol\":{\"keccak256\":\"0xf811453b8a4ed57c1014a836dee8545d4d35731104865b5c89bee1fa74c17f50\",\"urls\":[\"bzzr://779170ca90b832ca4a8d251303ac40bd497baa8a8604fe6e3dc26182299f27ac\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/proxy/Proxy.sol\":{\"keccak256\":\"0xd148032e0335e7aaf573e84ed4189df6e8e3fc1940dff4c8378a5b0a642e88a5\",\"urls\":[\"bzzr://c53cd92b2046812517ef784b77cadbc37a49b475aefefd74e5b4b809f1513b4e\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/proxy/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x2cd963259f6c9f76685b2c09f2a66043fbcd7118e699e69347ea08f1e5ffb1da\",\"urls\":[\"bzzr://6bb2b6c1731558b1cb2eaac144087c66070de794c123d4698ae6d6fe4799430a\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/interfaces/ITokenController.sol\":{\"keccak256\":\"0x70bb520afba804d169f10524ecfd9ff5f4b5c8a16813dd0261bf88720989b4ad\",\"urls\":[\"bzzr://0c94895a7943f06484c8fd4c11aaa9877ab2ea7c151a5e88429a3194179596ea\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/interfaces/Iupgradable.sol\":{\"keccak256\":\"0x976ee433714079b695c5ab305f7f51cb5e2f3304f536dce0de7a852ed92905fe\",\"urls\":[\"bzzr://6b800149fdfd548fc3660e5a4d672c9133d0306b0d4594c5c63f8858f48d33dc\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/mock/MockMemberRoles.sol\":{\"keccak256\":\"0xc2a7b235593be42635eb9ef975e2c2ea40399c0a95d7799c97297be1c8cb484f\",\"urls\":[\"bzzr://ff7ced285bb797ad68729ec2de2e8309cf3df4a878c87c5f02ab8f7af4ca8483\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506120f4806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636122f840116100ad5780639dd86e0f116100715780639dd86e0f146104c9578063aa561f9d146104f6578063c578f23014610522578063cb41e01b14610550578063d365a08e146105c057610121565b80636122f84014610388578063648edd9c146103d35780636d1c31d214610443578063790e118c1461049b57806399374642146104a357610121565b80632f473021116100f45780632f4730211461028257806343b20ff6146102b65780634b6199b0146102dc578063505ef22f146102e45780635daf08ca1461031057610121565b80630d48669a146101265780630dc6f8471461015f57806322ce72541461018e5780632dc4bdca146101c8575b600080fd5b6101436004803603602081101561013c57600080fd5b50356105c8565b604080516001600160a01b039092168252519081900360200190f35b61017c6004803603602081101561017557600080fd5b50356105fa565b60408051918252519081900360200190f35b6101b4600480360360208110156101a457600080fd5b50356001600160a01b0316610622565b604080519115158252519081900360200190f35b610280600480360360608110156101de57600080fd5b8135919081019060408101602082013564010000000081111561020057600080fd5b82018360208201111561021257600080fd5b8035906020019184600183028401116401000000008311171561023457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550505090356001600160a01b031691506106ba9050565b005b6102806004803603606081101561029857600080fd5b506001600160a01b03813516906020810135906040013515156107a2565b610280600480360360208110156102cc57600080fd5b50356001600160a01b03166108b2565b6102806109fb565b6101b4600480360360408110156102fa57600080fd5b506001600160a01b038135169060200135610bf0565b61032d6004803603602081101561032657600080fd5b5035610db7565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561037357818101518382015260200161035b565b50505050905001935050505060405180910390f35b6103af6004803603602081101561039e57600080fd5b50356001600160c01b031916610e40565b604080516001600160c01b0319909316835260208301919091528051918290030190f35b610280600480360360208110156103e957600080fd5b81019060208101813564010000000081111561040457600080fd5b82018360208201111561041657600080fd5b8035906020019184602083028401116401000000008311171561043857600080fd5b509092509050610ea0565b61044b610fd1565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561048757818101518382015260200161046f565b505050509050019250505060405180910390f35b61017c61103b565b61044b600480360360208110156104b957600080fd5b50356001600160a01b0316611042565b610280600480360360408110156104df57600080fd5b506001600160c01b0319813516906020013561126b565b6102806004803603604081101561050c57600080fd5b50803590602001356001600160a01b0316611396565b6102806004803603604081101561053857600080fd5b506001600160a01b03813581169160200135166114e3565b6102806004803603602081101561056657600080fd5b81019060208101813564010000000081111561058157600080fd5b82018360208201111561059357600080fd5b803590602001918460208302840111640100000000831117156105b557600080fd5b509092509050611601565b6101436116b4565b6000600282815481106105d757fe5b60009182526020909120600490910201600301546001600160a01b031692915050565b60006002828154811061060957fe5b9060005260206000209060040201600001549050919050565b6000805460408051600160e31b6227050b028152600160f11b6123ab02600482015290516001600160a01b03928316928516918391630138285891602480820192602092909190829003018186803b15801561067d57600080fd5b505afa158015610691573d6000803e3d6000fd5b505050506040513d60208110156106a757600080fd5b50516001600160a01b0316149392505050565b60005460408051600160e31b6227050b028152600160f11b6123ab02600482015290516001600160a01b039092169133918391630138285891602480820192602092909190829003018186803b15801561071357600080fd5b505afa158015610727573d6000803e3d6000fd5b505050506040513d602081101561073d57600080fd5b50516001600160a01b0316146107915760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08185d5d1a1bdc9a5e995902604482015290519081900360640190fd5b61079c8484846116c3565b50505050565b8160006001600160a01b0316600282815481106107bb57fe5b60009182526020909120600360049092020101546001600160a01b03161461085657600281815481106107ea57fe5b60009182526020909120600490910201600301546001600160a01b031633146108515760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08185d5d1a1bdc9a5e995902604482015290519081900360640190fd5b6108a7565b61085f33610622565b6108a75760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08105d5d1a1bdc9a5e995902604482015290519081900360640190fd5b61079c848484611816565b6000309050806001600160a01b031663025313a26040518163ffffffff1660e01b815260040160206040518083038186803b1580156108f057600080fd5b505afa158015610904573d6000803e3d6000fd5b505050506040513d602081101561091a57600080fd5b50516001600160a01b0316331461097b5760408051600160e51b62461bcd02815260206004820152601a60248201527f53656e646572206973206e6f742070726f7879206f776e65722e000000000000604482015290519081900360640190fd5b60035461010090046001600160a01b0316156109d25760408051600160e51b62461bcd02815260206004820152600b6024820152600160aa1b6a105b1c9958591e4814d95d02604482015290519081900360640190fd5b50600380546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6000309050806001600160a01b031663025313a26040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3957600080fd5b505afa158015610a4d573d6000803e3d6000fd5b505050506040513d6020811015610a6357600080fd5b50516001600160a01b03163314610ac45760408051600160e51b62461bcd02815260206004820152601a60248201527f53656e646572206973206e6f742070726f7879206f776e65722e000000000000604482015290519081900360640190fd5b6000546001600160a01b031615610b255760408051600160e51b62461bcd02815260206004820152601a60248201527f4d6173746572206164647265737320616c726561647920736574000000000000604482015290519081900360640190fd5b600080546001600160a01b03191633179081905560408051600160e31b6227050b028152600160f01b61544302600482015290516001600160a01b03929092169182916301382858916024808301926020929190829003018186803b158015610b8d57600080fd5b505afa158015610ba1573d6000803e3d6000fd5b505050506040513d6020811015610bb757600080fd5b5051600180546001600160a01b0319166001600160a01b039092169190911790555050681b1ae4d6e2ef5000006004556213c680600555565b600081610bff57506001610db1565b6002821415610c9b5760015460408051600160e11b63258770150281526001600160a01b03868116600483015291516000939290921691634b0ee02a91602480820192602092909190829003018186803b158015610c5c57600080fd5b505afa158015610c70573d6000803e3d6000fd5b505050506040513d6020811015610c8657600080fd5b50511115610c9657506001610db1565b610dad565b6003821415610d67576004546001546005546001600160a01b039091169063179e91f1908690610cd1904263ffffffff611c5a16565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200180600160f11b612229028152506020018281526020019250505060206040518083038186803b158015610d2e57600080fd5b505afa158015610d42573d6000803e3d6000fd5b505050506040513d6020811015610d5857600080fd5b505110610c9657506001610db1565b600060028381548110610d7657fe5b600091825260208083206001600160a01b0388168452600160049093020191909101905260409020541115610dad57506001610db1565b5060005b92915050565b600060608260028481548110610dc957fe5b906000526020600020906004020160020180805480602002602001604051908101604052809291908181526020018280548015610e2f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e11575b50505050509050915091505b915091565b806000600160c11b6726a72627a1a5a229026001600160c01b031983161415610e6c5750600454610e3b565b600160d11b652a2627a1a229026001600160c01b031984161415610e3b576201518060055481610e9857fe5b049050915091565b610eaa60016105fa565b600114610f015760408051600160e51b62461bcd02815260206004820152601460248201527f416c726561647920696e697469616c697a656421000000000000000000000000604482015290519081900360640190fd5b60005b81811015610fcc57610f3d838383818110610f1b57fe5b905060200201356001600160a01b031660026003811115610f3857fe5b610bf0565b610f915760408051600160e51b62461bcd02815260206004820152601260248201527f6e6f74206120746f6b656e20686f6c6465720000000000000000000000000000604482015290519081900360640190fd5b610fc4838383818110610fa057fe5b905060200201356001600160a01b031660016003811115610fbd57fe5b6001611816565b600101610f04565b505050565b6002546040805182815260208084028201019091526060918015610fff578160200160208202803883390190505b50905060005b60025481101561103757611018816105fa565b82828151811061102457fe5b6020908102919091010152600101611005565b5090565b6002545b90565b600254604080518281526020808402820101909152606091908290828015611074578160200160208202803883390190505b509050600060015b838110156110e95760006002828154811061109357fe5b600091825260208083206001600160a01b038b1684526001600490930201919091019052604090205411156110e157808383815181106110cf57fe5b60209081029190910101526001909101905b60010161107c565b5060015460408051600160e11b63258770150281526001600160a01b03888116600483015291516000939290921691634b0ee02a91602480820192602092909190829003018186803b15801561113e57600080fd5b505afa158015611152573d6000803e3d6000fd5b505050506040513d602081101561116857600080fd5b5051111561118d57600282828151811061117e57fe5b60209081029190910101526001015b6004546001546005546001600160a01b039091169063179e91f19088906111ba904263ffffffff611c5a16565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200180600160f11b612229028152506020018281526020019250505060206040518083038186803b15801561121757600080fd5b505afa15801561122b573d6000803e3d6000fd5b505050506040513d602081101561124157600080fd5b50511061126357600382828151811061125657fe5b6020026020010181815250505b509392505050565b60005460408051600160e31b6227050b028152600160f11b6123ab02600482015290516001600160a01b039092169133918391630138285891602480820192602092909190829003018186803b1580156112c457600080fd5b505afa1580156112d8573d6000803e3d6000fd5b505050506040513d60208110156112ee57600080fd5b50516001600160a01b0316146113425760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08185d5d1a1bdc9a5e995902604482015290519081900360640190fd5b600160c11b6726a72627a1a5a229026001600160c01b03198416141561136c576004829055610fcc565b600160d11b652a2627a1a229026001600160c01b031984161415610fcc5750620151800260055550565b8160006001600160a01b0316600282815481106113af57fe5b60009182526020909120600360049092020101546001600160a01b03161461144a57600281815481106113de57fe5b60009182526020909120600490910201600301546001600160a01b031633146114455760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08185d5d1a1bdc9a5e995902604482015290519081900360640190fd5b61149b565b61145333610622565b61149b5760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08105d5d1a1bdc9a5e995902604482015290519081900360640190fd5b81600284815481106114a957fe5b906000526020600020906004020160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050565b600160006001600160a01b0316600282815481106114fd57fe5b60009182526020909120600360049092020101546001600160a01b031614611598576002818154811061152c57fe5b60009182526020909120600490910201600301546001600160a01b031633146115935760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08185d5d1a1bdc9a5e995902604482015290519081900360640190fd5b6115e9565b6115a133610622565b6115e95760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08105d5d1a1bdc9a5e995902604482015290519081900360640190fd5b6115f4836001610fbd565b610fcc8260016000611816565b60035461010090046001600160a01b0316331461161d57600080fd5b60035460ff16156116785760408051600160e51b62461bcd02815260206004820152601360248201527f416c726561647920636f6e737472756374656400000000000000000000000000604482015290519081900360640190fd5b611680611cbe565b60005b818110156116a25761169a838383818110610fa057fe5b600101611683565b50506003805460ff1916600117905550565b6000546001600160a01b031681565b6002805490507fe2981862bbf692aa30ba39d4eca9c69e5dcebf3eae5fb93332940c23c1c4c3c584846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561172f578181015183820152602001611717565b50505050905090810190601f16801561175c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a260408051606081018252600081528151600180825281840190935260029260208301919081602001602082028038833950505081526001600160a01b038416602091820152825460018101808555600094855293829020835160049092020190815582820151805191926117e692600285019290910190611e2e565b5060409190910151600390910180546001600160a01b0319166001600160a01b0390921691909117905550505050565b60028214158015611828575060038214155b61186657604051600160e51b62461bcd028152600401808060200182810382526031815260200180611f336031913960400191505060405180910390fd5b80156119e7576002828154811061187957fe5b600091825260208083206001600160a01b038716845260016004909302019190910190526040902054156118f75760408051600160e51b62461bcd02815260206004820152600e60248201527f616c726561647920616374697665000000000000000000000000000000000000604482015290519081900360640190fd5b6119206002838154811061190757fe5b9060005260206000209060040201600001546001611c5a565b6002838154811061192d57fe5b6000918252602090912060049091020155600280548390811061194c57fe5b9060005260206000209060040201600201805490506002838154811061196e57fe5b600091825260208083206001600160a01b03881684526001600490930201919091019052604090205560028054839081106119a557fe5b60009182526020808320600492909202909101600201805460018101825590835291200180546001600160a01b0319166001600160a01b038516179055610fcc565b6000600283815481106119f657fe5b600091825260208083206001600160a01b03881684526001600490930201919091019052604090205411611a645760408051600160e51b62461bcd02815260206004820152600a6024820152600160b01b696e6f742061637469766502604482015290519081900360640190fd5b600060028381548110611a7357fe5b90600052602060002090600402016001016000856001600160a01b03166001600160a01b03168152602001908152602001600020549050600060028481548110611ab957fe5b906000526020600020906004020160020160028581548110611ad757fe5b90600052602060002090600402016000015481548110611af357fe5b600091825260209091200154600280546001600160a01b039092169250839186908110611b1c57fe5b600091825260208083206001600160a01b03861684526001600490930201919091019052604090205560028054611b71919086908110611b5857fe5b9060005260206000209060040201600001546001611dce565b60028581548110611b7e57fe5b9060005260206000209060040201600001819055508060028581548110611ba157fe5b90600052602060002090600402016002018381548110611bbd57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060028481548110611bf857fe5b9060005260206000209060040201600201805480919060019003611c1c9190611e8f565b5060028481548110611c2a57fe5b600091825260208083206001600160a01b0389168452600160049093020191909101905260408120555050505050565b600082820183811015611cb75760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b611cff600160b21b69155b985cdcda59db9959026040518060400160405280600a8152602001600160b21b69155b985cdcda59db99590281525060006116c3565b611d447f41647669736f727920426f61726400000000000000000000000000000000000060405180610100016040528060d18152602001611f6460d1913960006116c3565b611d887f546f6b656e20486f6c64657200000000000000000000000000000000000000006040518060c00160405280609481526020016120356094913960006116c3565b611dcc7f446973707574655265736f6c7574696f6e000000000000000000000000000000604051806080016040528060418152602001611ef26041913960006116c3565b565b600082821115611e285760408051600160e51b62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054828255906000526020600020908101928215611e83579160200282015b82811115611e8357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611e4e565b50611037929150611eb3565b815481835581811115610fcc57600083815260209020610fcc918101908301611ed7565b61103f91905b808211156110375780546001600160a01b0319168155600101611eb9565b61103f91905b808211156110375760008155600101611edd56fe526570726573656e7473206d656d626572732077686f206172652061737369676e656420746f20766f7465206f6e207265736f6c76696e672064697370757465734d656d6265727368697020746f207468697320726f6c65206973206465746563746564206175746f6d61746963616c6c7953656c656374656420666577206d656d6265727320746861742061726520646565706c7920656e747275737465642062792074686520644170702e20416e20696465616c2061647669736f727920626f6172642073686f756c642062652061206d6978206f6620736b696c6c73206f6620646f6d61696e2c20676f7665726e616e63652c2072657365617263682c20746563686e6f6c6f67792c20636f6e73756c74696e672065746320746f20696d70726f76652074686520706572666f726d616e6365206f662074686520644170702e526570726573656e747320616c6c2075736572732077686f20686f6c64206441707020746f6b656e732e205468697320697320746865206d6f73742067656e6572616c2063617465676f727920616e6420616e796f6e6520686f6c64696e6720746f6b656e2062616c616e636520697320612070617274206f6620746869732063617465676f72792062792064656661756c742ea165627a7a72305820776129096f878c1376be7c94621be427eed6b749d8e94f86f86770fdb40c44b20029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80636122f840116100ad5780639dd86e0f116100715780639dd86e0f146104c9578063aa561f9d146104f6578063c578f23014610522578063cb41e01b14610550578063d365a08e146105c057610121565b80636122f84014610388578063648edd9c146103d35780636d1c31d214610443578063790e118c1461049b57806399374642146104a357610121565b80632f473021116100f45780632f4730211461028257806343b20ff6146102b65780634b6199b0146102dc578063505ef22f146102e45780635daf08ca1461031057610121565b80630d48669a146101265780630dc6f8471461015f57806322ce72541461018e5780632dc4bdca146101c8575b600080fd5b6101436004803603602081101561013c57600080fd5b50356105c8565b604080516001600160a01b039092168252519081900360200190f35b61017c6004803603602081101561017557600080fd5b50356105fa565b60408051918252519081900360200190f35b6101b4600480360360208110156101a457600080fd5b50356001600160a01b0316610622565b604080519115158252519081900360200190f35b610280600480360360608110156101de57600080fd5b8135919081019060408101602082013564010000000081111561020057600080fd5b82018360208201111561021257600080fd5b8035906020019184600183028401116401000000008311171561023457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550505090356001600160a01b031691506106ba9050565b005b6102806004803603606081101561029857600080fd5b506001600160a01b03813516906020810135906040013515156107a2565b610280600480360360208110156102cc57600080fd5b50356001600160a01b03166108b2565b6102806109fb565b6101b4600480360360408110156102fa57600080fd5b506001600160a01b038135169060200135610bf0565b61032d6004803603602081101561032657600080fd5b5035610db7565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561037357818101518382015260200161035b565b50505050905001935050505060405180910390f35b6103af6004803603602081101561039e57600080fd5b50356001600160c01b031916610e40565b604080516001600160c01b0319909316835260208301919091528051918290030190f35b610280600480360360208110156103e957600080fd5b81019060208101813564010000000081111561040457600080fd5b82018360208201111561041657600080fd5b8035906020019184602083028401116401000000008311171561043857600080fd5b509092509050610ea0565b61044b610fd1565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561048757818101518382015260200161046f565b505050509050019250505060405180910390f35b61017c61103b565b61044b600480360360208110156104b957600080fd5b50356001600160a01b0316611042565b610280600480360360408110156104df57600080fd5b506001600160c01b0319813516906020013561126b565b6102806004803603604081101561050c57600080fd5b50803590602001356001600160a01b0316611396565b6102806004803603604081101561053857600080fd5b506001600160a01b03813581169160200135166114e3565b6102806004803603602081101561056657600080fd5b81019060208101813564010000000081111561058157600080fd5b82018360208201111561059357600080fd5b803590602001918460208302840111640100000000831117156105b557600080fd5b509092509050611601565b6101436116b4565b6000600282815481106105d757fe5b60009182526020909120600490910201600301546001600160a01b031692915050565b60006002828154811061060957fe5b9060005260206000209060040201600001549050919050565b6000805460408051600160e31b6227050b028152600160f11b6123ab02600482015290516001600160a01b03928316928516918391630138285891602480820192602092909190829003018186803b15801561067d57600080fd5b505afa158015610691573d6000803e3d6000fd5b505050506040513d60208110156106a757600080fd5b50516001600160a01b0316149392505050565b60005460408051600160e31b6227050b028152600160f11b6123ab02600482015290516001600160a01b039092169133918391630138285891602480820192602092909190829003018186803b15801561071357600080fd5b505afa158015610727573d6000803e3d6000fd5b505050506040513d602081101561073d57600080fd5b50516001600160a01b0316146107915760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08185d5d1a1bdc9a5e995902604482015290519081900360640190fd5b61079c8484846116c3565b50505050565b8160006001600160a01b0316600282815481106107bb57fe5b60009182526020909120600360049092020101546001600160a01b03161461085657600281815481106107ea57fe5b60009182526020909120600490910201600301546001600160a01b031633146108515760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08185d5d1a1bdc9a5e995902604482015290519081900360640190fd5b6108a7565b61085f33610622565b6108a75760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08105d5d1a1bdc9a5e995902604482015290519081900360640190fd5b61079c848484611816565b6000309050806001600160a01b031663025313a26040518163ffffffff1660e01b815260040160206040518083038186803b1580156108f057600080fd5b505afa158015610904573d6000803e3d6000fd5b505050506040513d602081101561091a57600080fd5b50516001600160a01b0316331461097b5760408051600160e51b62461bcd02815260206004820152601a60248201527f53656e646572206973206e6f742070726f7879206f776e65722e000000000000604482015290519081900360640190fd5b60035461010090046001600160a01b0316156109d25760408051600160e51b62461bcd02815260206004820152600b6024820152600160aa1b6a105b1c9958591e4814d95d02604482015290519081900360640190fd5b50600380546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6000309050806001600160a01b031663025313a26040518163ffffffff1660e01b815260040160206040518083038186803b158015610a3957600080fd5b505afa158015610a4d573d6000803e3d6000fd5b505050506040513d6020811015610a6357600080fd5b50516001600160a01b03163314610ac45760408051600160e51b62461bcd02815260206004820152601a60248201527f53656e646572206973206e6f742070726f7879206f776e65722e000000000000604482015290519081900360640190fd5b6000546001600160a01b031615610b255760408051600160e51b62461bcd02815260206004820152601a60248201527f4d6173746572206164647265737320616c726561647920736574000000000000604482015290519081900360640190fd5b600080546001600160a01b03191633179081905560408051600160e31b6227050b028152600160f01b61544302600482015290516001600160a01b03929092169182916301382858916024808301926020929190829003018186803b158015610b8d57600080fd5b505afa158015610ba1573d6000803e3d6000fd5b505050506040513d6020811015610bb757600080fd5b5051600180546001600160a01b0319166001600160a01b039092169190911790555050681b1ae4d6e2ef5000006004556213c680600555565b600081610bff57506001610db1565b6002821415610c9b5760015460408051600160e11b63258770150281526001600160a01b03868116600483015291516000939290921691634b0ee02a91602480820192602092909190829003018186803b158015610c5c57600080fd5b505afa158015610c70573d6000803e3d6000fd5b505050506040513d6020811015610c8657600080fd5b50511115610c9657506001610db1565b610dad565b6003821415610d67576004546001546005546001600160a01b039091169063179e91f1908690610cd1904263ffffffff611c5a16565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200180600160f11b612229028152506020018281526020019250505060206040518083038186803b158015610d2e57600080fd5b505afa158015610d42573d6000803e3d6000fd5b505050506040513d6020811015610d5857600080fd5b505110610c9657506001610db1565b600060028381548110610d7657fe5b600091825260208083206001600160a01b0388168452600160049093020191909101905260409020541115610dad57506001610db1565b5060005b92915050565b600060608260028481548110610dc957fe5b906000526020600020906004020160020180805480602002602001604051908101604052809291908181526020018280548015610e2f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e11575b50505050509050915091505b915091565b806000600160c11b6726a72627a1a5a229026001600160c01b031983161415610e6c5750600454610e3b565b600160d11b652a2627a1a229026001600160c01b031984161415610e3b576201518060055481610e9857fe5b049050915091565b610eaa60016105fa565b600114610f015760408051600160e51b62461bcd02815260206004820152601460248201527f416c726561647920696e697469616c697a656421000000000000000000000000604482015290519081900360640190fd5b60005b81811015610fcc57610f3d838383818110610f1b57fe5b905060200201356001600160a01b031660026003811115610f3857fe5b610bf0565b610f915760408051600160e51b62461bcd02815260206004820152601260248201527f6e6f74206120746f6b656e20686f6c6465720000000000000000000000000000604482015290519081900360640190fd5b610fc4838383818110610fa057fe5b905060200201356001600160a01b031660016003811115610fbd57fe5b6001611816565b600101610f04565b505050565b6002546040805182815260208084028201019091526060918015610fff578160200160208202803883390190505b50905060005b60025481101561103757611018816105fa565b82828151811061102457fe5b6020908102919091010152600101611005565b5090565b6002545b90565b600254604080518281526020808402820101909152606091908290828015611074578160200160208202803883390190505b509050600060015b838110156110e95760006002828154811061109357fe5b600091825260208083206001600160a01b038b1684526001600490930201919091019052604090205411156110e157808383815181106110cf57fe5b60209081029190910101526001909101905b60010161107c565b5060015460408051600160e11b63258770150281526001600160a01b03888116600483015291516000939290921691634b0ee02a91602480820192602092909190829003018186803b15801561113e57600080fd5b505afa158015611152573d6000803e3d6000fd5b505050506040513d602081101561116857600080fd5b5051111561118d57600282828151811061117e57fe5b60209081029190910101526001015b6004546001546005546001600160a01b039091169063179e91f19088906111ba904263ffffffff611c5a16565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200180600160f11b612229028152506020018281526020019250505060206040518083038186803b15801561121757600080fd5b505afa15801561122b573d6000803e3d6000fd5b505050506040513d602081101561124157600080fd5b50511061126357600382828151811061125657fe5b6020026020010181815250505b509392505050565b60005460408051600160e31b6227050b028152600160f11b6123ab02600482015290516001600160a01b039092169133918391630138285891602480820192602092909190829003018186803b1580156112c457600080fd5b505afa1580156112d8573d6000803e3d6000fd5b505050506040513d60208110156112ee57600080fd5b50516001600160a01b0316146113425760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08185d5d1a1bdc9a5e995902604482015290519081900360640190fd5b600160c11b6726a72627a1a5a229026001600160c01b03198416141561136c576004829055610fcc565b600160d11b652a2627a1a229026001600160c01b031984161415610fcc5750620151800260055550565b8160006001600160a01b0316600282815481106113af57fe5b60009182526020909120600360049092020101546001600160a01b03161461144a57600281815481106113de57fe5b60009182526020909120600490910201600301546001600160a01b031633146114455760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08185d5d1a1bdc9a5e995902604482015290519081900360640190fd5b61149b565b61145333610622565b61149b5760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08105d5d1a1bdc9a5e995902604482015290519081900360640190fd5b81600284815481106114a957fe5b906000526020600020906004020160030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050565b600160006001600160a01b0316600282815481106114fd57fe5b60009182526020909120600360049092020101546001600160a01b031614611598576002818154811061152c57fe5b60009182526020909120600490910201600301546001600160a01b031633146115935760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08185d5d1a1bdc9a5e995902604482015290519081900360640190fd5b6115e9565b6115a133610622565b6115e95760408051600160e51b62461bcd02815260206004820152600e6024820152600160921b6d139bdd08105d5d1a1bdc9a5e995902604482015290519081900360640190fd5b6115f4836001610fbd565b610fcc8260016000611816565b60035461010090046001600160a01b0316331461161d57600080fd5b60035460ff16156116785760408051600160e51b62461bcd02815260206004820152601360248201527f416c726561647920636f6e737472756374656400000000000000000000000000604482015290519081900360640190fd5b611680611cbe565b60005b818110156116a25761169a838383818110610fa057fe5b600101611683565b50506003805460ff1916600117905550565b6000546001600160a01b031681565b6002805490507fe2981862bbf692aa30ba39d4eca9c69e5dcebf3eae5fb93332940c23c1c4c3c584846040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561172f578181015183820152602001611717565b50505050905090810190601f16801561175c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a260408051606081018252600081528151600180825281840190935260029260208301919081602001602082028038833950505081526001600160a01b038416602091820152825460018101808555600094855293829020835160049092020190815582820151805191926117e692600285019290910190611e2e565b5060409190910151600390910180546001600160a01b0319166001600160a01b0390921691909117905550505050565b60028214158015611828575060038214155b61186657604051600160e51b62461bcd028152600401808060200182810382526031815260200180611f336031913960400191505060405180910390fd5b80156119e7576002828154811061187957fe5b600091825260208083206001600160a01b038716845260016004909302019190910190526040902054156118f75760408051600160e51b62461bcd02815260206004820152600e60248201527f616c726561647920616374697665000000000000000000000000000000000000604482015290519081900360640190fd5b6119206002838154811061190757fe5b9060005260206000209060040201600001546001611c5a565b6002838154811061192d57fe5b6000918252602090912060049091020155600280548390811061194c57fe5b9060005260206000209060040201600201805490506002838154811061196e57fe5b600091825260208083206001600160a01b03881684526001600490930201919091019052604090205560028054839081106119a557fe5b60009182526020808320600492909202909101600201805460018101825590835291200180546001600160a01b0319166001600160a01b038516179055610fcc565b6000600283815481106119f657fe5b600091825260208083206001600160a01b03881684526001600490930201919091019052604090205411611a645760408051600160e51b62461bcd02815260206004820152600a6024820152600160b01b696e6f742061637469766502604482015290519081900360640190fd5b600060028381548110611a7357fe5b90600052602060002090600402016001016000856001600160a01b03166001600160a01b03168152602001908152602001600020549050600060028481548110611ab957fe5b906000526020600020906004020160020160028581548110611ad757fe5b90600052602060002090600402016000015481548110611af357fe5b600091825260209091200154600280546001600160a01b039092169250839186908110611b1c57fe5b600091825260208083206001600160a01b03861684526001600490930201919091019052604090205560028054611b71919086908110611b5857fe5b9060005260206000209060040201600001546001611dce565b60028581548110611b7e57fe5b9060005260206000209060040201600001819055508060028581548110611ba157fe5b90600052602060002090600402016002018381548110611bbd57fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060028481548110611bf857fe5b9060005260206000209060040201600201805480919060019003611c1c9190611e8f565b5060028481548110611c2a57fe5b600091825260208083206001600160a01b0389168452600160049093020191909101905260408120555050505050565b600082820183811015611cb75760408051600160e51b62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b611cff600160b21b69155b985cdcda59db9959026040518060400160405280600a8152602001600160b21b69155b985cdcda59db99590281525060006116c3565b611d447f41647669736f727920426f61726400000000000000000000000000000000000060405180610100016040528060d18152602001611f6460d1913960006116c3565b611d887f546f6b656e20486f6c64657200000000000000000000000000000000000000006040518060c00160405280609481526020016120356094913960006116c3565b611dcc7f446973707574655265736f6c7574696f6e000000000000000000000000000000604051806080016040528060418152602001611ef26041913960006116c3565b565b600082821115611e285760408051600160e51b62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054828255906000526020600020908101928215611e83579160200282015b82811115611e8357825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611e4e565b50611037929150611eb3565b815481835581811115610fcc57600083815260209020610fcc918101908301611ed7565b61103f91905b808211156110375780546001600160a01b0319168155600101611eb9565b61103f91905b808211156110375760008155600101611edd56fe526570726573656e7473206d656d626572732077686f206172652061737369676e656420746f20766f7465206f6e207265736f6c76696e672064697370757465734d656d6265727368697020746f207468697320726f6c65206973206465746563746564206175746f6d61746963616c6c7953656c656374656420666577206d656d6265727320746861742061726520646565706c7920656e747275737465642062792074686520644170702e20416e20696465616c2061647669736f727920626f6172642073686f756c642062652061206d6978206f6620736b696c6c73206f6620646f6d61696e2c20676f7665726e616e63652c2072657365617263682c20746563686e6f6c6f67792c20636f6e73756c74696e672065746320746f20696d70726f76652074686520706572666f726d616e6365206f662074686520644170702e526570726573656e747320616c6c2075736572732077686f20686f6c64206441707020746f6b656e732e205468697320697320746865206d6f73742067656e6572616c2063617465676f727920616e6420616e796f6e6520686f6c64696e6720746f6b656e2062616c616e636520697320612070617274206f6620746869732063617465676f72792062792064656661756c742ea165627a7a72305820776129096f878c1376be7c94621be427eed6b749d8e94f86f86770fdb40c44b20029",
  "sourceMap": "29:679:57:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29:679:57;;;;;;;",
  "deployedSourceMap": "29:679:57:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;29:679:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6579:168:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6579:168:6;;:::i;:::-;;;;-1:-1:-1;;;;;6579:168:6;;;;;;;;;;;;;;6269:204;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6269:204:6;;:::i;:::-;;;;;;;;;;;;;;;;1523:182:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1523:182:16;-1:-1:-1;;;;;1523:182:16;;:::i;:::-;;;;;;;;;;;;;;;;;;4296:247:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4296:247:6;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4296:247:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4296:247:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4296:247:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4296:247:6;;-1:-1:-1;;;4296:247:6;;-1:-1:-1;;;;;4296:247:6;;-1:-1:-1;4296:247:6;;-1:-1:-1;4296:247:6:i;:::-;;4803:233;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4803:233:6;;;;;;;;;;;;;;;:::i;3175:356::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3175:356:6;-1:-1:-1;;;;;3175:356:6;;:::i;2431:593::-;;;:::i;8789:803::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8789:803:6;;;;;;;;:::i;5895:212::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5895:212:6;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5895:212:6;;;;;;;;;;;;;;;;;;8215:315;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8215:315:6;-1:-1:-1;;;;;;8215:315:6;;:::i;:::-;;;;-1:-1:-1;;;;;;8215:315:6;;;;;;;;;;;;;;;;;;;;;214:491:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;214:491:57;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;214:491:57;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;214:491:57;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;214:491:57;;-1:-1:-1;214:491:57;-1:-1:-1;214:491:57;:::i;9738:339:6:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9738:339:6;;;;;;;;;;;;;;;;;5085:128;;;:::i;6832:889::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6832:889:6;-1:-1:-1;;;;;6832:889:6;;:::i;7871:338::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;;7871:338:6;;;;;;;;:::i;5455:221::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5455:221:6;;;;;;-1:-1:-1;;;;;5455:221:6;;:::i;2081:287::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2081:287:6;;;;;;;;;;:::i;3702:395::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3702:395:6;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;3702:395:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3702:395:6;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;3702:395:6;;-1:-1:-1;3702:395:6;-1:-1:-1;3702:395:6;:::i;1088:28:16:-;;;:::i;6579:168:6:-;6643:7;6700:14;6715:13;6700:29;;;;;;;;;;;;;;;;;;;;;:40;;;-1:-1:-1;;;;;6700:40:6;;6579:168;-1:-1:-1;;6579:168:6:o;6269:204::-;6362:7;6423:14;6438:13;6423:29;;;;;;;;;;;;;;;;;;:43;;;6416:50;;6269:204;;;:::o;1523:182:16:-;1591:4;1628:13;;1660:25;;;-1:-1:-1;;;;;1660:25:16;;-1:-1:-1;;;;;1660:25:16;;;;;;-1:-1:-1;;;;;1628:13:16;;;;1660:37;;;1628:13;;1660:19;;:25;;;;;;;;;;;;;;;1628:13;1660:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1660:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1660:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1660:25:16;-1:-1:-1;;;;;1660:37:16;;;1523:182;-1:-1:-1;;;1523:182:16:o;4296:247:6:-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;;;;4486:50:6;4495:9;4506:16;4524:11;4486:8;:50::i;:::-;4296:247;;;;:::o;4803:233::-;4965:7;1663:1;-1:-1:-1;;;;;1611:54:6;:14;1626:13;1611:29;;;;;;;;;;;;;;;;:40;:29;;;;;:40;;-1:-1:-1;;;;;1611:40:6;:54;1607:273;;1718:14;1733:13;1718:29;;;;;;;;;;;;;;;;;;;;;:40;;;-1:-1:-1;;;;;1718:40:6;1704:10;:54;1679:127;;;;;-1:-1:-1;;;;;1679:127:6;;;;;;;;;;;;-1:-1:-1;;;;;1679:127:6;;;;;;;;;;;;;;;1607:273;;;1829:32;1850:10;1829:20;:32::i;:::-;1821:59;;;;;-1:-1:-1;;;;;1821:59:6;;;;;;;;;;;;-1:-1:-1;;;;;1821:59:6;;;;;;;;;;;;;;;4984:45;4996:14;5012:7;5021;4984:11;:45::i;3175:356::-;3242:30;3337:4;3242:112;;3386:5;-1:-1:-1;;;;;3386:16:6;;:18;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3386:18:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3386:18:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3386:18:6;-1:-1:-1;;;;;3372:32:6;:10;:32;3364:71;;;;;-1:-1:-1;;;;;3364:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3453:9;;;;;-1:-1:-1;;;;;3453:9:6;:23;3445:47;;;;;-1:-1:-1;;;;;3445:47:6;;;;;;;;;;;;-1:-1:-1;;;;;3445:47:6;;;;;;;;;;;;;;;-1:-1:-1;3502:9:6;:22;;-1:-1:-1;;;;;3502:22:6;;;;;-1:-1:-1;;;;;;3502:22:6;;;;;;;;;3175:356::o;2431:593::-;2476:30;2571:4;2476:112;;2620:5;-1:-1:-1;;;;;2620:16:6;;:18;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2620:18:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2620:18:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2620:18:6;-1:-1:-1;;;;;2606:32:6;:10;:32;2598:71;;;;;-1:-1:-1;;;;;2598:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;2713:1;2688:13;-1:-1:-1;;;;;2688:13:6;:27;2680:66;;;;;-1:-1:-1;;;;;2680:66:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;2756:13;:26;;-1:-1:-1;;;;;;2756:26:6;2772:10;2756:26;;;;;2897:37;;;-1:-1:-1;;;;;2897:37:6;;-1:-1:-1;;;;;2897:37:6;;;;;;-1:-1:-1;;;;;2825:13:6;;;;;;;2897:31;;:37;;;;;;;;;;;;;;2825:13;2897:37;;;5:2:-1;;;;30:1;27;20:12;5:2;2897:37:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2897:37:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2897:37:6;2849:15;:95;;-1:-1:-1;;;;;;2849:95:6;-1:-1:-1;;;;;2849:95:6;;;;;;;;;-1:-1:-1;;2975:9:6;2954:18;:30;3010:7;2994:13;:23;2431:593::o;8789:803::-;8894:4;8949:35;8945:619;;-1:-1:-1;9007:4:6;9000:11;;8945:619;9051:16;9032:7;:36;9028:536;;;9088:15;;:46;;;-1:-1:-1;;;;;9088:46:6;;-1:-1:-1;;;;;9088:46:6;;;;;;;;;9137:1;;9088:15;;;;;:30;;:46;;;;;;;;;;;;;;;:15;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;9088:46:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9088:46:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9088:46:6;:50;9084:100;;;-1:-1:-1;9165:4:6;9158:11;;9084:100;9028:536;;;9223:22;9204:7;:42;9200:364;;;9352:18;;9266:15;;9324:13;;-1:-1:-1;;;;;9266:15:6;;;;:34;;9301:14;;9323:24;;9343:3;9323:24;:19;:24;:::i;:::-;9266:82;;;;;;;;;;;;;-1:-1:-1;;;;;9266:82:6;-1:-1:-1;;;;;9266:82:6;;;;;;-1:-1:-1;;;;;9266:82:6;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9266:82:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9266:82:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9266:82:6;:104;9262:154;;-1:-1:-1;9397:4:6;9390:11;;9200:364;9490:1;9436:14;9451:7;9436:23;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9436:51:6;;;;:35;:23;;;;;:35;;;;:51;;;;;;:55;9432:132;;;-1:-1:-1;9549:4:6;9542:11;;9432:132;-1:-1:-1;9580:5:6;8789:803;;;;;:::o;5895:212::-;5980:7;5989:28;6041:13;6056:14;6071:13;6056:29;;;;;;;;;;;;;;;;;;:43;;6033:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6033:67:6;;;;;;;;;;;;;;;;;;;;;;;;;;;5895:212;;;;:::o;8215:315::-;8323:4;8277:14;-1:-1:-1;;;;;;;;;;;8340:18:6;;;8337:186;;;-1:-1:-1;8380:18:6;;8337:186;;;-1:-1:-1;;;;;;;;;;;8419:16:6;;;8415:108;;;8505:6;8488:13;;:24;;;;;;8482:30;;8215:315;;;:::o;214:491:57:-;325:44;349:18;325:15;:44::i;:::-;373:1;325:49;304:116;;;;;-1:-1:-1;;;;;304:116:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:9;431:268;451:18;;;431:268;;;515:48;525:7;;533:1;525:10;;;;;;;;;;;;;-1:-1:-1;;;;;525:10:57;545:16;537:25;;;;;;;;515:9;:48::i;:::-;490:125;;;;;-1:-1:-1;;;;;490:125:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;630:58;642:7;;650:1;642:10;;;;;;;;;;;;;-1:-1:-1;;;;;642:10:57;662:18;654:27;;;;;;;;683:4;630:11;:58::i;:::-;471:3;;431:268;;;;214:491;;:::o;9738:339:6:-;9926:14;:21;9912:36;;;;;;;;;;;;;;;;9821:29;;9912:36;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;9912:36:6;-1:-1:-1;9897:51:6;-1:-1:-1;9963:9:6;9958:113;9982:14;:21;9978:25;;9958:113;;;10042:18;10058:1;10042:15;:18::i;:::-;10024:12;10037:1;10024:15;;;;;;;;;;;;;;;;;:36;10005:3;;9958:113;;;;9738:339;:::o;5085:128::-;5185:14;:21;5085:128;;:::o;6832:889::-;6996:14;:21;7060;;;;;;;;;;;;;;;;6916:16;;6996:21;6916:16;;6996:21;7060;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;7060:21:6;-1:-1:-1;7027:54:6;-1:-1:-1;7091:15:6;7137:1;7120:202;7144:6;7140:1;:10;7120:202;;;7223:1;7175:14;7190:1;7175:17;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7175:45:6;;;;:29;:17;;;;;:29;;;;:45;;;;;;:49;7171:141;;;7269:1;7244:13;7258:7;7244:22;;;;;;;;;;;;;;;;;:26;7288:9;;;;;7171:141;7152:3;;7120:202;;;-1:-1:-1;7335:15:6;;:46;;;-1:-1:-1;;;;;7335:46:6;;-1:-1:-1;;;;;7335:46:6;;;;;;;;;7384:1;;7335:15;;;;;:30;;:46;;;;;;;;;;;;;;;:15;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;7335:46:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7335:46:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7335:46:6;:50;7331:154;;;7434:16;7401:13;7415:7;7401:22;;;;;;;;;;;;;;;;;:50;7465:9;;7331:154;7584:18;;7498:15;;7556:13;;-1:-1:-1;;;;;7498:15:6;;;;:34;;7533:14;;7555:24;;7575:3;7555:24;:19;:24;:::i;:::-;7498:82;;;;;;;;;;;;;-1:-1:-1;;;;;7498:82:6;-1:-1:-1;;;;;7498:82:6;;;;;;-1:-1:-1;;;;;7498:82:6;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7498:82:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7498:82:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7498:82:6;:104;7494:191;;7651:22;7618:13;7632:7;7618:22;;;;;;;;;;;;;:56;;;;;7494:191;-1:-1:-1;7701:13:6;6832:889;-1:-1:-1;;;6832:889:6:o;7871:338::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;7967:18:6;;;7964:238;;;8053:18;:24;;;7964:238;;;-1:-1:-1;;;;;;;;;;;8098:16:6;;;8094:108;;;-1:-1:-1;8184:6:6;8177:14;8161:13;:30;-1:-1:-1;7871:338:6:o;5455:221::-;5564:7;1663:1;-1:-1:-1;;;;;1611:54:6;:14;1626:13;1611:29;;;;;;;;;;;;;;;;:40;:29;;;;;:40;;-1:-1:-1;;;;;1611:40:6;:54;1607:273;;1718:14;1733:13;1718:29;;;;;;;;;;;;;;;;;;;;;:40;;;-1:-1:-1;;;;;1718:40:6;1704:10;:54;1679:127;;;;;-1:-1:-1;;;;;1679:127:6;;;;;;;;;;;;-1:-1:-1;;;;;1679:127:6;;;;;;;;;;;;;;;1607:273;;;1829:32;1850:10;1829:20;:32::i;:::-;1821:59;;;;;-1:-1:-1;;;;;1821:59:6;;;;;;;;;;;;-1:-1:-1;;;;;1821:59:6;;;;;;;;;;;;;;;5655:14;5618;5633:7;5618:23;;;;;;;;;;;;;;;;;;:34;;;:51;;;;;-1:-1:-1;;;;;5618:51:6;;;;;-1:-1:-1;;;;;5618:51:6;;;;;;5455:221;;;:::o;2081:287::-;2197:18;1663:1;-1:-1:-1;;;;;1611:54:6;:14;1626:13;1611:29;;;;;;;;;;;;;;;;:40;:29;;;;;:40;;-1:-1:-1;;;;;1611:40:6;:54;1607:273;;1718:14;1733:13;1718:29;;;;;;;;;;;;;;;;;;;;;:40;;;-1:-1:-1;;;;;1718:40:6;1704:10;:54;1679:127;;;;;-1:-1:-1;;;;;1679:127:6;;;;;;;;;;;;-1:-1:-1;;;;;1679:127:6;;;;;;;;;;;;;;;1607:273;;;1829:32;1850:10;1829:20;:32::i;:::-;1821:59;;;;;-1:-1:-1;;;;;1821:59:6;;;;;;;;;;;;-1:-1:-1;;;;;1821:59:6;;;;;;;;;;;;;;;2232:61;2244:13;2267:18;2259:27;;2232:61;2303:58;2315:9;2334:18;2355:5;2303:11;:58::i;3702:395::-;3815:9;;;;;-1:-1:-1;;;;;3815:9:6;3801:10;:23;3793:32;;;;;;3844:16;;;;3843:17;3835:49;;;;;-1:-1:-1;;;;;3835:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3894:24;:22;:24::i;:::-;3933:9;3928:130;3948:19;;;3928:130;;;3988:59;4000:8;;4009:1;4000:11;;;;;;3988:59;3969:3;;3928:130;;;-1:-1:-1;;4067:16:6;:23;;-1:-1:-1;;4067:23:6;4086:4;4067:23;;;-1:-1:-1;3702:395:6:o;1088:28:16:-;;;-1:-1:-1;;;;;1088:28:16;;:::o;12283:317:6:-;12438:14;:21;;;;12427:62;12461:9;12472:16;12427:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12427:62:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12532:51;;;;;;;;-1:-1:-1;12532:51:6;;12553:16;;12567:1;12553:16;;;;;;;;;12499:14;;12532:51;;;;12553:16;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;-1:-1;;;12532:51:6;;-1:-1:-1;;;;;12532:51:6;;;;;;;27:10:-1;;39:1;23:18;;45:23;;;-1:-1;12499:94:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12499:94:6;;;;;;;;;;;;-1:-1:-1;;;;;;12499:94:6;-1:-1:-1;;;;;12499:94:6;;;;;;;;;-1:-1:-1;;;;12283:317:6:o;10287:1797::-;10452:16;10433:7;:36;;:82;;;;-1:-1:-1;10492:22:6;10473:7;:42;;10433:82;10412:178;;;;-1:-1:-1;;;;;10412:178:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10604:7;10600:1478;;;10652:14;10667:7;10652:23;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10652:51:6;;;;:35;:23;;;;;:35;;;;:51;;;;;;:56;10627:129;;;;;-1:-1:-1;;;;;10627:129:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;10811:100;10841:14;10856:7;10841:23;;;;;;;;;;;;;;;;;;:37;;;10896:1;10811:12;:100::i;:::-;10771:14;10786:7;10771:23;;;;;;;;;;;;;;;;;;;;;:140;10996:14;:23;;11011:7;;10996:23;;;;;;;;;;;;;;;;:54;;:78;;;;10925:14;10940:7;10925:23;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10925:68:6;;;;:52;:23;;;;;:52;;;;:68;;;;;:149;11088:14;:23;;11103:7;;11088:23;;;;;;;;;;;;;;;;;;;;;;:37;;27:10:-1;;39:1;23:18;;45:23;;11088:58:6;;;;;;;;-1:-1:-1;;;;;;11088:58:6;-1:-1:-1;;;;;11088:58:6;;;;;10600:1478;;;11346:1;11292:14;11307:7;11292:23;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11292:51:6;;;;:35;:23;;;;;:35;;;;:51;;;;;;:55;11267:124;;;;;-1:-1:-1;;;;;11267:124:6;;;;;;;;;;;;-1:-1:-1;;;;;11267:124:6;;;;;;;;;;;;;;;11405:20;11428:14;11443:7;11428:23;;;;;;;;;;;;;;;;;;:52;;:68;11481:14;-1:-1:-1;;;;;11428:68:6;-1:-1:-1;;;;;11428:68:6;;;;;;;;;;;;;11405:91;;11510:19;11532:14;11547:7;11532:23;;;;;;;;;;;;;;;;;;:54;;11587:14;11602:7;11587:23;;;;;;;;;;;;;;;;;;:37;;;11532:93;;;;;;;;;;;;;;;;;;11639:14;:23;;-1:-1:-1;;;;;11532:93:6;;;;-1:-1:-1;11690:12:6;;11654:7;;11639:23;;;;;;;;;;;;;;-1:-1:-1;;;;;11639:48:6;;;;:35;:23;;;;;:35;;;;:48;;;;;:63;11786:14;:23;;11756:100;;11786:14;11801:7;;11786:23;;;;;;;;;;;;;;;;:37;;;11841:1;11756:12;:100::i;:::-;11716:14;11731:7;11716:23;;;;;;;;;;;;;;;;;;:37;;:140;;;;11924:11;11870:14;11885:7;11870:23;;;;;;;;;;;;;;;;;;:37;;11908:12;11870:51;;;;;;;;;;;;;;;;:65;;;;;-1:-1:-1;;;;;11870:65:6;;;;;-1:-1:-1;;;;;11870:65:6;;;;;;11949:14;11964:7;11949:23;;;;;;;;;;;;;;;;;;:37;;:46;;;;;;;;;;;;:::i;:::-;;12016:14;12031:7;12016:23;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12016:51:6;;;;:35;:23;;;;;:35;;;;:51;;;;;12009:58;-1:-1:-1;;10287:1797:6;;;:::o;834:176:24:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:24:o;12662:894:6:-;12715:48;-1:-1:-1;;;;;12715:48:6;;;;;;;;;;;;;-1:-1:-1;;;;;12715:48:6;;;12760:1;12715:8;:48::i;:::-;12773:320;;;;;;;;;;;;;;;;;;;13081:1;12773:8;:320::i;:::-;13103:257;;;;;;;;;;;;;;;;;;;13348:1;13103:8;:257::i;:::-;13370:179;;;;;;;;;;;;;;;;;;;13537:1;13370:8;:179::i;:::-;12662:894::o;1274:179:24:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;;;1351:49:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:24;;;1274:179::o;29:679:57:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;29:679:57;-1:-1:-1;;;;;29:679:57;;;;;;;;;;;-1:-1:-1;29:679:57;;;;;;;-1:-1:-1;29:679:57;;;-1:-1:-1;29:679:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;29:679:57;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "import \"../MemberRoles.sol\";\ncontract MockMemberRoles is MemberRoles {\n\t/**\n     * @dev is used to add initial advisory board members\n     * @param abArray is the list of initial advisory board members\n     */\n    function addInitialABMembers(\n        address[] calldata abArray\n    ) external {\n        require(\n            numberOfMembers(uint256(Role.AdvisoryBoard)) == 1,\n            \"Already initialized!\"\n        );\n\n        for (uint256 i = 0; i < abArray.length; i++) {\n            require(\n                checkRole(abArray[i], uint256(Role.TokenHolder)),\n                \"not a token holder\"\n            );\n\n            _updateRole(abArray[i], uint256(Role.AdvisoryBoard), true);\n        }\n    }\n\n}",
  "sourcePath": "/home/madan/Documents/PlotX/PlotxContract/contracts/mock/MockMemberRoles.sol",
  "ast": {
    "absolutePath": "/home/madan/Documents/PlotX/PlotxContract/contracts/mock/MockMemberRoles.sol",
    "exportedSymbols": {
      "MockMemberRoles": [
        27827
      ]
    },
    "id": 27828,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/madan/Documents/PlotX/PlotxContract/contracts/MemberRoles.sol",
        "file": "../MemberRoles.sol",
        "id": 27768,
        "nodeType": "ImportDirective",
        "scope": 27828,
        "sourceUnit": 10029,
        "src": "0:28:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27769,
              "name": "MemberRoles",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10028,
              "src": "57:11:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MemberRoles_$10028",
                "typeString": "contract MemberRoles"
              }
            },
            "id": 27770,
            "nodeType": "InheritanceSpecifier",
            "src": "57:11:57"
          }
        ],
        "contractDependencies": [
          10028,
          15298,
          15552,
          26951
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 27827,
        "linearizedBaseContracts": [
          27827,
          10028,
          26951,
          15298,
          15552
        ],
        "name": "MockMemberRoles",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 27825,
              "nodeType": "Block",
              "src": "294:411:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 27779,
                                    "name": "Role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15475,
                                    "src": "349:4:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Role_$15475_$",
                                      "typeString": "type(enum IMemberRoles.Role)"
                                    }
                                  },
                                  "id": 27780,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "AdvisoryBoard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "349:18:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Role_$15475",
                                    "typeString": "enum IMemberRoles.Role"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_Role_$15475",
                                    "typeString": "enum IMemberRoles.Role"
                                  }
                                ],
                                "id": 27778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "341:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 27781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "341:27:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 27777,
                            "name": "numberOfMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9506
                            ],
                            "referencedDeclaration": 9506,
                            "src": "325:15:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 27782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "325:44:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 27783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "373:1:57",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "325:49:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920696e697469616c697a656421",
                        "id": 27785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "388:22:57",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdb4157245cacfcdcb6a96b028a6a392beb109679e3f6c08e5a90605f5bb1d30",
                          "typeString": "literal_string \"Already initialized!\""
                        },
                        "value": "Already initialized!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdb4157245cacfcdcb6a96b028a6a392beb109679e3f6c08e5a90605f5bb1d30",
                          "typeString": "literal_string \"Already initialized!\""
                        }
                      ],
                      "id": 27776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30082,
                        30083
                      ],
                      "referencedDeclaration": 30083,
                      "src": "304:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "304:116:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27787,
                  "nodeType": "ExpressionStatement",
                  "src": "304:116:57"
                },
                {
                  "body": {
                    "id": 27823,
                    "nodeType": "Block",
                    "src": "476:223:57",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 27801,
                                    "name": "abArray",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27773,
                                    "src": "525:7:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 27803,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 27802,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27789,
                                    "src": "533:1:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "525:10:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 27805,
                                        "name": "Role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15475,
                                        "src": "545:4:57",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Role_$15475_$",
                                          "typeString": "type(enum IMemberRoles.Role)"
                                        }
                                      },
                                      "id": 27806,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "TokenHolder",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "545:16:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Role_$15475",
                                        "typeString": "enum IMemberRoles.Role"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_Role_$15475",
                                        "typeString": "enum IMemberRoles.Role"
                                      }
                                    ],
                                    "id": 27804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "537:7:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": "uint256"
                                  },
                                  "id": 27807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "537:25:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 27800,
                                "name": "checkRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  9765
                                ],
                                "referencedDeclaration": 9765,
                                "src": "515:9:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) view returns (bool)"
                                }
                              },
                              "id": 27808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "515:48:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f74206120746f6b656e20686f6c646572",
                              "id": 27809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "581:20:57",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_410536e00efea7ba9cafad11aa007a8aa73a1e2d68479501554731f73b350aff",
                                "typeString": "literal_string \"not a token holder\""
                              },
                              "value": "not a token holder"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_410536e00efea7ba9cafad11aa007a8aa73a1e2d68479501554731f73b350aff",
                                "typeString": "literal_string \"not a token holder\""
                              }
                            ],
                            "id": 27799,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              30082,
                              30083
                            ],
                            "referencedDeclaration": 30083,
                            "src": "490:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 27810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "490:125:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27811,
                        "nodeType": "ExpressionStatement",
                        "src": "490:125:57"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 27813,
                                "name": "abArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27773,
                                "src": "642:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 27815,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 27814,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27789,
                                "src": "650:1:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "642:10:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 27817,
                                    "name": "Role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15475,
                                    "src": "662:4:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Role_$15475_$",
                                      "typeString": "type(enum IMemberRoles.Role)"
                                    }
                                  },
                                  "id": 27818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "AdvisoryBoard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "662:18:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Role_$15475",
                                    "typeString": "enum IMemberRoles.Role"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_Role_$15475",
                                    "typeString": "enum IMemberRoles.Role"
                                  }
                                ],
                                "id": 27816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "654:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 27819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "654:27:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 27820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "683:4:57",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 27812,
                            "name": "_updateRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9960,
                            "src": "630:11:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool)"
                            }
                          },
                          "id": 27821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "630:58:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27822,
                        "nodeType": "ExpressionStatement",
                        "src": "630:58:57"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 27792,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27789,
                      "src": "451:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 27793,
                        "name": "abArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27773,
                        "src": "455:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 27794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "455:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "451:18:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27824,
                  "initializationExpression": {
                    "assignments": [
                      27789
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 27789,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 27824,
                        "src": "436:9:57",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27788,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "436:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 27791,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 27790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "448:1:57",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "436:13:57"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 27797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "471:3:57",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 27796,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27789,
                        "src": "471:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27798,
                    "nodeType": "ExpressionStatement",
                    "src": "471:3:57"
                  },
                  "nodeType": "ForStatement",
                  "src": "431:268:57"
                }
              ]
            },
            "documentation": "@dev is used to add initial advisory board members\n@param abArray is the list of initial advisory board members",
            "id": 27826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addInitialABMembers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27773,
                  "name": "abArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 27826,
                  "src": "252:26:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27771,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "252:7:57",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27772,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "252:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:42:57"
            },
            "returnParameters": {
              "id": 27775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "294:0:57"
            },
            "scope": 27827,
            "src": "214:491:57",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 27828,
        "src": "29:679:57"
      }
    ],
    "src": "0:708:57"
  },
  "legacyAST": {
    "absolutePath": "/home/madan/Documents/PlotX/PlotxContract/contracts/mock/MockMemberRoles.sol",
    "exportedSymbols": {
      "MockMemberRoles": [
        27827
      ]
    },
    "id": 27828,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/home/madan/Documents/PlotX/PlotxContract/contracts/MemberRoles.sol",
        "file": "../MemberRoles.sol",
        "id": 27768,
        "nodeType": "ImportDirective",
        "scope": 27828,
        "sourceUnit": 10029,
        "src": "0:28:57",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27769,
              "name": "MemberRoles",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10028,
              "src": "57:11:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MemberRoles_$10028",
                "typeString": "contract MemberRoles"
              }
            },
            "id": 27770,
            "nodeType": "InheritanceSpecifier",
            "src": "57:11:57"
          }
        ],
        "contractDependencies": [
          10028,
          15298,
          15552,
          26951
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 27827,
        "linearizedBaseContracts": [
          27827,
          10028,
          26951,
          15298,
          15552
        ],
        "name": "MockMemberRoles",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 27825,
              "nodeType": "Block",
              "src": "294:411:57",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 27779,
                                    "name": "Role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15475,
                                    "src": "349:4:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Role_$15475_$",
                                      "typeString": "type(enum IMemberRoles.Role)"
                                    }
                                  },
                                  "id": 27780,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "AdvisoryBoard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "349:18:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Role_$15475",
                                    "typeString": "enum IMemberRoles.Role"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_Role_$15475",
                                    "typeString": "enum IMemberRoles.Role"
                                  }
                                ],
                                "id": 27778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "341:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 27781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "341:27:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 27777,
                            "name": "numberOfMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9506
                            ],
                            "referencedDeclaration": 9506,
                            "src": "325:15:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 27782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "325:44:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 27783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "373:1:57",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "325:49:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920696e697469616c697a656421",
                        "id": 27785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "388:22:57",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdb4157245cacfcdcb6a96b028a6a392beb109679e3f6c08e5a90605f5bb1d30",
                          "typeString": "literal_string \"Already initialized!\""
                        },
                        "value": "Already initialized!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdb4157245cacfcdcb6a96b028a6a392beb109679e3f6c08e5a90605f5bb1d30",
                          "typeString": "literal_string \"Already initialized!\""
                        }
                      ],
                      "id": 27776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30082,
                        30083
                      ],
                      "referencedDeclaration": 30083,
                      "src": "304:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "304:116:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27787,
                  "nodeType": "ExpressionStatement",
                  "src": "304:116:57"
                },
                {
                  "body": {
                    "id": 27823,
                    "nodeType": "Block",
                    "src": "476:223:57",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 27801,
                                    "name": "abArray",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27773,
                                    "src": "525:7:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 27803,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 27802,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 27789,
                                    "src": "533:1:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "525:10:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 27805,
                                        "name": "Role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15475,
                                        "src": "545:4:57",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Role_$15475_$",
                                          "typeString": "type(enum IMemberRoles.Role)"
                                        }
                                      },
                                      "id": 27806,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "TokenHolder",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "545:16:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Role_$15475",
                                        "typeString": "enum IMemberRoles.Role"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_enum$_Role_$15475",
                                        "typeString": "enum IMemberRoles.Role"
                                      }
                                    ],
                                    "id": 27804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "537:7:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": "uint256"
                                  },
                                  "id": 27807,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "537:25:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 27800,
                                "name": "checkRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  9765
                                ],
                                "referencedDeclaration": 9765,
                                "src": "515:9:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) view returns (bool)"
                                }
                              },
                              "id": 27808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "515:48:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6f74206120746f6b656e20686f6c646572",
                              "id": 27809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "581:20:57",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_410536e00efea7ba9cafad11aa007a8aa73a1e2d68479501554731f73b350aff",
                                "typeString": "literal_string \"not a token holder\""
                              },
                              "value": "not a token holder"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_410536e00efea7ba9cafad11aa007a8aa73a1e2d68479501554731f73b350aff",
                                "typeString": "literal_string \"not a token holder\""
                              }
                            ],
                            "id": 27799,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              30082,
                              30083
                            ],
                            "referencedDeclaration": 30083,
                            "src": "490:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 27810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "490:125:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27811,
                        "nodeType": "ExpressionStatement",
                        "src": "490:125:57"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 27813,
                                "name": "abArray",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27773,
                                "src": "642:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 27815,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 27814,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27789,
                                "src": "650:1:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "642:10:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 27817,
                                    "name": "Role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15475,
                                    "src": "662:4:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Role_$15475_$",
                                      "typeString": "type(enum IMemberRoles.Role)"
                                    }
                                  },
                                  "id": 27818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "AdvisoryBoard",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "662:18:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Role_$15475",
                                    "typeString": "enum IMemberRoles.Role"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_Role_$15475",
                                    "typeString": "enum IMemberRoles.Role"
                                  }
                                ],
                                "id": 27816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "654:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint256"
                              },
                              "id": 27819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "654:27:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 27820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "683:4:57",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 27812,
                            "name": "_updateRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9960,
                            "src": "630:11:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool)"
                            }
                          },
                          "id": 27821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "630:58:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27822,
                        "nodeType": "ExpressionStatement",
                        "src": "630:58:57"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 27792,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27789,
                      "src": "451:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 27793,
                        "name": "abArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27773,
                        "src": "455:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 27794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "455:14:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "451:18:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27824,
                  "initializationExpression": {
                    "assignments": [
                      27789
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 27789,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 27824,
                        "src": "436:9:57",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27788,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "436:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 27791,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 27790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "448:1:57",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "436:13:57"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 27797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "471:3:57",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 27796,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27789,
                        "src": "471:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 27798,
                    "nodeType": "ExpressionStatement",
                    "src": "471:3:57"
                  },
                  "nodeType": "ForStatement",
                  "src": "431:268:57"
                }
              ]
            },
            "documentation": "@dev is used to add initial advisory board members\n@param abArray is the list of initial advisory board members",
            "id": 27826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addInitialABMembers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27773,
                  "name": "abArray",
                  "nodeType": "VariableDeclaration",
                  "scope": 27826,
                  "src": "252:26:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 27771,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "252:7:57",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 27772,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "252:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:42:57"
            },
            "returnParameters": {
              "id": 27775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "294:0:57"
            },
            "scope": 27827,
            "src": "214:491:57",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 27828,
        "src": "29:679:57"
      }
    ],
    "src": "0:708:57"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xe2981862bbf692aa30ba39d4eca9c69e5dcebf3eae5fb93332940c23c1c4c3c5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "roleId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "roleName",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "roleDescription",
              "type": "string"
            }
          ],
          "name": "MemberRole",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9f41A1A5929A84D4B4D759a502698d653BEB7FcE",
      "transactionHash": "0xf18ee5d723a4503e1278c29cfaffa898cc6d0c46483a5758bba98376ea1cdc1e"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-10T08:39:39.299Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "addInitialABMembers(address[])": {
        "details": "is used to add initial advisory board members",
        "params": {
          "abArray": "is the list of initial advisory board members"
        }
      },
      "addRole(bytes32,string,address)": {
        "details": "Adds new member role",
        "params": {
          "_authorized": "Authorized member against every role id",
          "_roleDescription": "New description hash",
          "_roleName": "New role name"
        }
      },
      "authorized(uint256)": {
        "details": "Return member address who holds the right to add/remove any member from specific role."
      },
      "changeAuthorized(uint256,address)": {
        "details": "Change Member Address who holds the authority to Add/Delete any member from specific role.",
        "params": {
          "_newAuthorized": "New authorized address against role id",
          "_roleId": "roleId to update its Authorized Address"
        }
      },
      "checkRole(address,uint256)": {
        "details": "Returns true if the given role id is assigned to a member.",
        "params": {
          "_memberAddress": "Address of member",
          "_roleId": "Checks member's authenticity with the roleId. i.e. Returns true if this roleId is assigned to member"
        }
      },
      "getMemberLengthForAllRoles()": {
        "details": "Return total number of members assigned against each role id.",
        "return": "totalMembers Total members in particular role id"
      },
      "isAuthorizedToGovern(address)": {
        "details": "checks if an address is authorized to govern"
      },
      "memberRolesInitiate(address[])": {
        "details": "to initiate the member roles and add initial AB, DR board members",
        "params": {
          "_abArray": "is array of addresses of the Initial AB members"
        }
      },
      "members(uint256)": {
        "details": "Gets the member addresses assigned by a specific role",
        "params": {
          "_memberRoleId": "Member role id"
        },
        "return": "roleId Role idallMemberAddress Member addresses of specified role id"
      },
      "numberOfMembers(uint256)": {
        "details": "Gets all members' length",
        "params": {
          "_memberRoleId": "Member role id"
        },
        "return": "memberRoleData[_memberRoleId].memberCounter Member length"
      },
      "roles(address)": {
        "details": "Get All role ids array that has been assigned to a member so far."
      },
      "setInititorAddress(address)": {
        "details": "Set the authorized address to add the initial roles and members",
        "params": {
          "_initiator": "is address of the initiator"
        }
      },
      "setMasterAddress()": {
        "details": "to change the master address"
      },
      "swapABMember(address,address)": {
        "details": "to swap advisory board member",
        "params": {
          "_newABAddress": "is address of new AB member",
          "_removeAB": "is advisory board member to be removed"
        }
      },
      "totalRoles()": {
        "details": "Return number of member roles"
      },
      "updateRole(address,uint256,bool)": {
        "details": "Assign or Delete a member from specific role.",
        "params": {
          "_active": "active is set to be True if we want to assign this role to member, False otherwise!",
          "_memberAddress": "Address of Member",
          "_roleId": "RoleId to update"
        }
      },
      "updateUintParameters(bytes8,uint256)": {
        "details": "Updates Uint Parameters of a code",
        "params": {
          "code": "whose details we want to update",
          "val": "value to set"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}