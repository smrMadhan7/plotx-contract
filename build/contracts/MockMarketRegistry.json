{
  "contractName": "MockMarketRegistry",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "getOpenMarkets",
      "outputs": [
        {
          "name": "_openMarkets",
          "type": "address[]"
        },
        {
          "name": "_marketTypes",
          "type": "uint256[]"
        },
        {
          "name": "_marketCurrencies",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketAddress",
          "type": "address"
        },
        {
          "name": "_result",
          "type": "uint256"
        }
      ],
      "name": "resolveDispute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimCreationReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pauseMarketCreation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_defaultAddress",
          "type": "address"
        },
        {
          "name": "_marketUtility",
          "type": "address"
        },
        {
          "name": "_plotToken",
          "type": "address"
        },
        {
          "name": "_configParams",
          "type": "address[]"
        }
      ],
      "name": "initiate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "userAddress",
          "type": "address"
        },
        {
          "name": "functionSignature",
          "type": "bytes"
        },
        {
          "name": "sigR",
          "type": "bytes32"
        },
        {
          "name": "sigS",
          "type": "bytes32"
        },
        {
          "name": "sigV",
          "type": "uint8"
        }
      ],
      "name": "executeMetaTransaction",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isWhitelistedSponsor",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_msgSender",
      "outputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "marketCreationData",
      "outputs": [
        {
          "name": "initialStartTime",
          "type": "uint64"
        },
        {
          "name": "marketAddress",
          "type": "address"
        },
        {
          "name": "penultimateMarket",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "plotToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_toCheck",
          "type": "address"
        }
      ],
      "name": "isAuthorizedToGovern",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketUtility",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getNonce",
      "outputs": [
        {
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "marketCreationPaused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_asset",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferAssets",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setMasterAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getChainID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "user",
          "type": "address"
        },
        {
          "name": "fromIndex",
          "type": "uint256"
        },
        {
          "name": "toIndex",
          "type": "uint256"
        }
      ],
      "name": "getMarketDetailsUser",
      "outputs": [
        {
          "name": "_market",
          "type": "address[]"
        },
        {
          "name": "_winnigOption",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "code",
          "type": "bytes8"
        }
      ],
      "name": "getUintParameters",
      "outputs": [
        {
          "name": "codeVal",
          "type": "bytes8"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "nonce",
          "type": "uint256"
        },
        {
          "name": "chainID",
          "type": "uint256"
        },
        {
          "name": "functionSignature",
          "type": "bytes"
        },
        {
          "name": "sigR",
          "type": "bytes32"
        },
        {
          "name": "sigS",
          "type": "bytes32"
        },
        {
          "name": "sigV",
          "type": "uint8"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isMarket",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "code",
          "type": "bytes8"
        },
        {
          "name": "value",
          "type": "address"
        }
      ],
      "name": "updateConfigAddressParameters",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_currencyIndexes",
          "type": "uint256[]"
        },
        {
          "name": "_marketImplementations",
          "type": "address[]"
        }
      ],
      "name": "updateMarketImplementations",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketStartTime",
          "type": "uint64"
        },
        {
          "name": "_ethMarketImplementation",
          "type": "address"
        },
        {
          "name": "_btcMarketImplementation",
          "type": "address"
        }
      ],
      "name": "addInitialMarketTypesAndStart",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_predictionPoints",
          "type": "uint256"
        },
        {
          "name": "_predictionAsset",
          "type": "address"
        },
        {
          "name": "_prediction",
          "type": "uint256"
        },
        {
          "name": "_leverage",
          "type": "uint256"
        }
      ],
      "name": "setUserGlobalPredictionData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "code",
          "type": "bytes8"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "updateUintParameters",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proposalId",
          "type": "uint256"
        }
      ],
      "name": "burnDisputedProposalTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_totalReward",
          "type": "uint256[]"
        },
        {
          "name": "winningOption",
          "type": "uint256"
        },
        {
          "name": "closeValue",
          "type": "uint256"
        },
        {
          "name": "_roundId",
          "type": "uint256"
        }
      ],
      "name": "callMarketResultEvent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "resumeMarketCreation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketAdd",
          "type": "address"
        }
      ],
      "name": "getMarketDetails",
      "outputs": [
        {
          "name": "_feedsource",
          "type": "bytes32"
        },
        {
          "name": "minvalue",
          "type": "uint256[]"
        },
        {
          "name": "maxvalue",
          "type": "uint256[]"
        },
        {
          "name": "optionprice",
          "type": "uint256[]"
        },
        {
          "name": "_ethStaked",
          "type": "uint256[]"
        },
        {
          "name": "_plotStaked",
          "type": "uint256[]"
        },
        {
          "name": "_predictionType",
          "type": "uint256"
        },
        {
          "name": "_expireTime",
          "type": "uint256"
        },
        {
          "name": "_predictionStatus",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketType",
          "type": "uint256"
        },
        {
          "name": "_marketCurrencyIndex",
          "type": "uint256"
        }
      ],
      "name": "createMarket",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_reward",
          "type": "uint256[]"
        },
        {
          "name": "predictionAssets",
          "type": "address[]"
        },
        {
          "name": "incentives",
          "type": "uint256"
        },
        {
          "name": "incentiveToken",
          "type": "address"
        }
      ],
      "name": "callClaimedEvent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_marketImplementation",
          "type": "address"
        },
        {
          "name": "_marketStartTime",
          "type": "uint64"
        }
      ],
      "name": "addNewMarketCurrency",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_proxyAddress",
          "type": "address"
        },
        {
          "name": "_newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeContractImplementation",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "masterAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_predictionTime",
          "type": "uint64"
        },
        {
          "name": "_marketStartTime",
          "type": "uint64"
        },
        {
          "name": "_optionRangePerc",
          "type": "uint64"
        }
      ],
      "name": "addNewMarketType",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalTitle",
          "type": "string"
        },
        {
          "name": "description",
          "type": "string"
        },
        {
          "name": "solutionHash",
          "type": "string"
        },
        {
          "name": "action",
          "type": "bytes"
        },
        {
          "name": "_stakeForDispute",
          "type": "uint256"
        },
        {
          "name": "_user",
          "type": "address"
        },
        {
          "name": "_ethSentToPool",
          "type": "uint256"
        },
        {
          "name": "_tokenSentToPool",
          "type": "uint256"
        },
        {
          "name": "_proposedValue",
          "type": "uint256"
        }
      ],
      "name": "createGovernanceProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenController",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getTotalAssetStakedByUser",
      "outputs": [
        {
          "name": "_plotStaked",
          "type": "uint256"
        },
        {
          "name": "_ethStaked",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_marketType",
          "type": "uint256"
        },
        {
          "name": "_marketCurrencyIndex",
          "type": "uint256"
        }
      ],
      "name": "calculateStartTimeForMarket",
      "outputs": [
        {
          "name": "_marketStartTime",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "maxRecords",
          "type": "uint256"
        }
      ],
      "name": "claimPendingReturn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "stockName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "predictionType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "name": "MarketQuestion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "predictionPoints",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "predictionAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "prediction",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "marketAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_leverage",
          "type": "uint256"
        }
      ],
      "name": "PlacePrediction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "totalReward",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "name": "winningOption",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "closeValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "roundId",
          "type": "uint256"
        }
      ],
      "name": "MarketResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketAdd",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reward",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "name": "_predictionAssets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "name": "incentive",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "incentiveToken",
          "type": "address"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "predictionTime",
          "type": "uint64"
        },
        {
          "indexed": false,
          "name": "optionRangePerc",
          "type": "uint64"
        }
      ],
      "name": "MarketTypes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "marketImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "feedAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "currencyName",
          "type": "bytes32"
        }
      ],
      "name": "MarketCurrencies",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "raisedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "proposalId",
          "type": "uint64"
        },
        {
          "indexed": false,
          "name": "proposedValue",
          "type": "uint256"
        }
      ],
      "name": "DisputeRaised",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "marketAdd",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "DisputeResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "relayerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "functionSignature",
          "type": "bytes"
        }
      ],
      "name": "MetaTransactionExecuted",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferPlot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"getOpenMarkets\",\"outputs\":[{\"name\":\"_openMarkets\",\"type\":\"address[]\"},{\"name\":\"_marketTypes\",\"type\":\"uint256[]\"},{\"name\":\"_marketCurrencies\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketAddress\",\"type\":\"address\"},{\"name\":\"_result\",\"type\":\"uint256\"}],\"name\":\"resolveDispute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferPlot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimCreationReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pauseMarketCreation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_defaultAddress\",\"type\":\"address\"},{\"name\":\"_marketUtility\",\"type\":\"address\"},{\"name\":\"_plotToken\",\"type\":\"address\"},{\"name\":\"_configParams\",\"type\":\"address[]\"}],\"name\":\"initiate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"userAddress\",\"type\":\"address\"},{\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"name\":\"sigR\",\"type\":\"bytes32\"},{\"name\":\"sigS\",\"type\":\"bytes32\"},{\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"executeMetaTransaction\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isWhitelistedSponsor\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_msgSender\",\"outputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"marketCreationData\",\"outputs\":[{\"name\":\"initialStartTime\",\"type\":\"uint64\"},{\"name\":\"marketAddress\",\"type\":\"address\"},{\"name\":\"penultimateMarket\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"plotToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_toCheck\",\"type\":\"address\"}],\"name\":\"isAuthorizedToGovern\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketUtility\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"name\":\"nonce\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"marketCreationPaused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_asset\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferAssets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"setMasterAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getChainID\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"user\",\"type\":\"address\"},{\"name\":\"fromIndex\",\"type\":\"uint256\"},{\"name\":\"toIndex\",\"type\":\"uint256\"}],\"name\":\"getMarketDetailsUser\",\"outputs\":[{\"name\":\"_market\",\"type\":\"address[]\"},{\"name\":\"_winnigOption\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"code\",\"type\":\"bytes8\"}],\"name\":\"getUintParameters\",\"outputs\":[{\"name\":\"codeVal\",\"type\":\"bytes8\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"nonce\",\"type\":\"uint256\"},{\"name\":\"chainID\",\"type\":\"uint256\"},{\"name\":\"functionSignature\",\"type\":\"bytes\"},{\"name\":\"sigR\",\"type\":\"bytes32\"},{\"name\":\"sigS\",\"type\":\"bytes32\"},{\"name\":\"sigV\",\"type\":\"uint8\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isMarket\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"code\",\"type\":\"bytes8\"},{\"name\":\"value\",\"type\":\"address\"}],\"name\":\"updateConfigAddressParameters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_currencyIndexes\",\"type\":\"uint256[]\"},{\"name\":\"_marketImplementations\",\"type\":\"address[]\"}],\"name\":\"updateMarketImplementations\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketStartTime\",\"type\":\"uint64\"},{\"name\":\"_ethMarketImplementation\",\"type\":\"address\"},{\"name\":\"_btcMarketImplementation\",\"type\":\"address\"}],\"name\":\"addInitialMarketTypesAndStart\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_predictionPoints\",\"type\":\"uint256\"},{\"name\":\"_predictionAsset\",\"type\":\"address\"},{\"name\":\"_prediction\",\"type\":\"uint256\"},{\"name\":\"_leverage\",\"type\":\"uint256\"}],\"name\":\"setUserGlobalPredictionData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"code\",\"type\":\"bytes8\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"updateUintParameters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proposalId\",\"type\":\"uint256\"}],\"name\":\"burnDisputedProposalTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_totalReward\",\"type\":\"uint256[]\"},{\"name\":\"winningOption\",\"type\":\"uint256\"},{\"name\":\"closeValue\",\"type\":\"uint256\"},{\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"callMarketResultEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"resumeMarketCreation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketAdd\",\"type\":\"address\"}],\"name\":\"getMarketDetails\",\"outputs\":[{\"name\":\"_feedsource\",\"type\":\"bytes32\"},{\"name\":\"minvalue\",\"type\":\"uint256[]\"},{\"name\":\"maxvalue\",\"type\":\"uint256[]\"},{\"name\":\"optionprice\",\"type\":\"uint256[]\"},{\"name\":\"_ethStaked\",\"type\":\"uint256[]\"},{\"name\":\"_plotStaked\",\"type\":\"uint256[]\"},{\"name\":\"_predictionType\",\"type\":\"uint256\"},{\"name\":\"_expireTime\",\"type\":\"uint256\"},{\"name\":\"_predictionStatus\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketType\",\"type\":\"uint256\"},{\"name\":\"_marketCurrencyIndex\",\"type\":\"uint256\"}],\"name\":\"createMarket\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_reward\",\"type\":\"uint256[]\"},{\"name\":\"predictionAssets\",\"type\":\"address[]\"},{\"name\":\"incentives\",\"type\":\"uint256\"},{\"name\":\"incentiveToken\",\"type\":\"address\"}],\"name\":\"callClaimedEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_marketImplementation\",\"type\":\"address\"},{\"name\":\"_marketStartTime\",\"type\":\"uint64\"}],\"name\":\"addNewMarketCurrency\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_proxyAddress\",\"type\":\"address\"},{\"name\":\"_newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeContractImplementation\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"masterAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_predictionTime\",\"type\":\"uint64\"},{\"name\":\"_marketStartTime\",\"type\":\"uint64\"},{\"name\":\"_optionRangePerc\",\"type\":\"uint64\"}],\"name\":\"addNewMarketType\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"proposalTitle\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"solutionHash\",\"type\":\"string\"},{\"name\":\"action\",\"type\":\"bytes\"},{\"name\":\"_stakeForDispute\",\"type\":\"uint256\"},{\"name\":\"_user\",\"type\":\"address\"},{\"name\":\"_ethSentToPool\",\"type\":\"uint256\"},{\"name\":\"_tokenSentToPool\",\"type\":\"uint256\"},{\"name\":\"_proposedValue\",\"type\":\"uint256\"}],\"name\":\"createGovernanceProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenController\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAssetStakedByUser\",\"outputs\":[{\"name\":\"_plotStaked\",\"type\":\"uint256\"},{\"name\":\"_ethStaked\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_marketType\",\"type\":\"uint256\"},{\"name\":\"_marketCurrencyIndex\",\"type\":\"uint256\"}],\"name\":\"calculateStartTimeForMarket\",\"outputs\":[{\"name\":\"_marketStartTime\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"maxRecords\",\"type\":\"uint256\"}],\"name\":\"claimPendingReturn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"stockName\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"predictionType\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"MarketQuestion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"predictionPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"predictionAsset\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"prediction\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"marketAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_leverage\",\"type\":\"uint256\"}],\"name\":\"PlacePrediction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"totalReward\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"winningOption\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"closeValue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"MarketResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketAdd\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reward\",\"type\":\"uint256[]\"},{\"indexed\":false,\"name\":\"_predictionAssets\",\"type\":\"address[]\"},{\"indexed\":false,\"name\":\"incentive\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"incentiveToken\",\"type\":\"address\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"predictionTime\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"optionRangePerc\",\"type\":\"uint64\"}],\"name\":\"MarketTypes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"marketImplementation\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"feedAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"currencyName\",\"type\":\"bytes32\"}],\"name\":\"MarketCurrencies\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"raisedBy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proposalId\",\"type\":\"uint64\"},{\"indexed\":false,\"name\":\"proposedValue\",\"type\":\"uint256\"}],\"name\":\"DisputeRaised\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"marketAdd\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"DisputeResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"relayerAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"functionSignature\",\"type\":\"bytes\"}],\"name\":\"MetaTransactionExecuted\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addInitialMarketTypesAndStart(uint64,address,address)\":{\"details\":\"Start the initial market.\\r\"},\"addNewMarketCurrency(address,uint64)\":{\"details\":\"Add new market currency.\\r\"},\"addNewMarketType(uint64,uint64,uint64)\":{\"details\":\"Add new market type.\\r\",\"params\":{\"_marketStartTime\":\"The time at which market will create.\\r\",\"_optionRangePerc\":\"Option range percent of neutral min, max options (raised by 2 decimals)\\r\",\"_predictionTime\":\"The time duration of market.\\r\"}},\"burnDisputedProposalTokens(uint256)\":{\"details\":\"Burns the tokens of member who raised the dispute, if dispute is rejected.\\r\",\"params\":{\"_proposalId\":\"Id of dispute resolution proposal\\r\"}},\"callClaimedEvent(address,uint256[],address[],uint256,address)\":{\"details\":\"Emits the claimed event.\\r\",\"params\":{\"_reward\":\"The reward which is claimed by user.\\r\",\"_user\":\"The address who claim their reward.\\r\",\"incentiveToken\":\"The incentive tokens of user.\\r\",\"incentives\":\"The incentives of user.\\r\",\"predictionAssets\":\"The prediction assets of user.\\r\"}},\"callMarketResultEvent(uint256[],uint256,uint256,uint256)\":{\"details\":\"Emits the MarketResult event.\\r\",\"params\":{\"_totalReward\":\"The amount of reward to be distribute.\\r\",\"closeValue\":\"The closing value of the market currency.\\r\",\"winningOption\":\"The winning option of the market.\\r\"}},\"claimCreationReward()\":{\"details\":\"function to reward user for initiating market creation calls\\r\"},\"claimPendingReturn(uint256)\":{\"details\":\"Claim the pending return of the market.\\r\",\"params\":{\"maxRecords\":\"Maximum number of records to claim reward for\\r\"}},\"createGovernanceProposal(string,string,string,bytes,uint256,address,uint256,uint256,uint256)\":{\"details\":\"Create proposal if user wants to raise the dispute.\\r\",\"params\":{\"_stakeForDispute\":\"The token staked to raise the diospute.\\r\",\"_user\":\"The address who raises the dispute.\\r\",\"action\":\"The encoded action for solution.\\r\",\"description\":\"The description of dispute.\\r\",\"proposalTitle\":\"The title of proposal created by user.\\r\",\"solutionHash\":\"The ipfs solution hash.\\r\"}},\"createMarket(uint256,uint256)\":{\"details\":\"Creates the new market\\r\",\"params\":{\"_marketCurrencyIndex\":\"the index of market currency.\\r\",\"_marketType\":\"The type of the market.\\r\"}},\"executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)\":{\"params\":{\"functionSignature\":\"Signature of the actual function to be called via meta transaction\",\"sigR\":\"R part of the signature\",\"sigS\":\"S part of the signature\",\"sigV\":\"V part of the signature\",\"userAddress\":\"Address of user trying to do meta transaction\"}},\"getMarketDetails(address)\":{\"details\":\"Gets the market details of the specified address.\\r\",\"params\":{\"_marketAdd\":\"The market address to query the details of market.\\r\"},\"return\":\"_feedsource bytes32 representing the currency or stock name of the market.\\rminvalue uint[] memory representing the minimum range of all the options of the market.\\rmaxvalue uint[] memory representing the maximum range of all the options of the market.\\roptionprice uint[] memory representing the option price of each option ranges of the market.\\r_ethStaked uint[] memory representing the ether staked on each option ranges of the market.\\r_plotStaked uint[] memory representing the plot staked on each option ranges of the market.\\r_predictionType uint representing the type of market.\\r_expireTime uint representing the expire time of the market.\\r_predictionStatus uint representing the status of the market.\\r\"},\"getMarketDetailsUser(address,uint256,uint256)\":{\"details\":\"Gets the market details of the specified user address.\\r\",\"params\":{\"fromIndex\":\"The index to query the details from.\\r\",\"toIndex\":\"The index to query the details to\\r\",\"user\":\"The address to query the details of market.\\r\"},\"return\":\"_market address[] memory representing the address of the market.\\r_winnigOption uint256[] memory representing the winning option range of the market.\\r\"},\"getOpenMarkets()\":{\"details\":\"Gets the addresses of open markets.\\r\",\"return\":\"_openMarkets address[] memory representing the open market addresses.\\r_marketTypes uint256[] memory representing the open market types.\\r\"},\"getTotalAssetStakedByUser(address)\":{\"details\":\"Get total assets staked by user in PlotX platform\\r\",\"return\":\"_plotStaked Total PLOT staked by user\\r_ethStaked Total ETH staked by user\\r\"},\"getUintParameters(bytes8)\":{\"details\":\"Get uint config parameters\\r\"},\"initiate(address,address,address,address[])\":{\"details\":\"Initialize the PlotX MarketRegistry.\\r\",\"params\":{\"_defaultAddress\":\"Address authorized to start initial markets\\r\",\"_marketUtility\":\"The address of market config.\\r\",\"_plotToken\":\"The instance of PlotX token.\\r\"}},\"isAuthorizedToGovern(address)\":{\"details\":\"checks if an address is authorized to govern\"},\"isMarket(address)\":{\"details\":\"Checks if given addres is valid market address.\\r\"},\"pauseMarketCreation()\":{\"details\":\"Updates Flag to pause creation of market.\\r\"},\"resolveDispute(address,uint256)\":{\"details\":\"Resolve the dispute if wrong value passed at the time of market result declaration.\\r\",\"params\":{\"_marketAddress\":\"The address specify the market.\\r\",\"_result\":\"The final result of the market.\\r\"}},\"resumeMarketCreation()\":{\"details\":\"Updates Flag to resume creation of market.\\r\"},\"setMasterAddress()\":{\"details\":\"Changes the master address and update it's instance\\r\"},\"setUserGlobalPredictionData(address,uint256,uint256,address,uint256,uint256)\":{\"details\":\"Emits the PlacePrediction event and sets the user data.\\r\",\"params\":{\"_leverage\":\"The leverage selected by user at the time of place prediction.\\r\",\"_prediction\":\"The option range on which user placed prediction.\\r\",\"_predictionAsset\":\"The prediction assets user will get.\\r\",\"_predictionPoints\":\"The positions user will get.\\r\",\"_user\":\"The address who placed prediction.\\r\",\"_value\":\"The amount of ether user staked.\\r\"}},\"transferAssets(address,address,uint256)\":{\"details\":\"Transfer `_amount` number of market registry assets contract to `_to` address\\r\"},\"updateMarketImplementations(uint256[],address[])\":{\"details\":\"Update the implementations of the market.\\r\"},\"upgradeContractImplementation(address,address)\":{\"details\":\"Upgrade the implementations of the contract.\\r\",\"params\":{\"_newImplementation\":\"Address of new implementation contract\\r\",\"_proxyAddress\":\"the proxy address.\\r\"}}}},\"userdoc\":{\"methods\":{\"executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)\":{\"notice\":\"Main function to be called when user wants to execute meta transaction. The actual function to be called should be passed as param with name functionSignature Here the basic signature recovery is being used. Signature is expected to be generated using personal_sign method.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/madan/Documents/PlotX/PlotxContract/contracts/mock/MockMarketRegistry.sol\":\"MockMarketRegistry\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/madan/Documents/PlotX/PlotxContract/contracts/MarketRegistry.sol\":{\"keccak256\":\"0xf39ed0bcdded1d7a3af3d0eed4bff14611e057a044b20a6c438ebec921941980\",\"urls\":[\"bzzr://58abc470ff18403c050e67ca4be3d1826f823f50ddaf3c4e4e4b49beb269cc4c\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/BasicMetaTransaction.sol\":{\"keccak256\":\"0x2a6d1c973d943f64864154330e294240e7f2b59fe42b2d6513410f2ffe7551ca\",\"urls\":[\"bzzr://c2f004bc95227ea65a304d850b8c52940af6957a601cd6d4fa2d6005495c9fe7\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/govblocks-protocol/Governed.sol\":{\"keccak256\":\"0xd4f7eec3339d4def34da340a103949230c46dea4fda9cb4a9a8beac13b9c6f97\",\"urls\":[\"bzzr://4b1bce9df45407fab176505c90483c13cf919600d8f838bd4a3ca9bf20d3d03e\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/govblocks-protocol/interfaces/IGovernance.sol\":{\"keccak256\":\"0x98b231757d85fb50d240650f745abfd206bb68162d3e2c1d4c25ea58f50c0a61\",\"urls\":[\"bzzr://c342107259c7cf9ea2e4664ad6b36d80c606d9b004baa95763fb5994daccd0e6\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/openzeppelin-solidity/math/SafeMath.sol\":{\"keccak256\":\"0x3ebcbbefce817362430b60e9ecaa67fc929f8b80a9d5a7814fa463e4aeed719b\",\"urls\":[\"bzzr://9cd2986ef600b1f67600dbb728055c24a5adabdc1aa23dc1236c91694400fc42\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/proxy/OwnedUpgradeabilityProxy.sol\":{\"keccak256\":\"0xf811453b8a4ed57c1014a836dee8545d4d35731104865b5c89bee1fa74c17f50\",\"urls\":[\"bzzr://779170ca90b832ca4a8d251303ac40bd497baa8a8604fe6e3dc26182299f27ac\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/proxy/Proxy.sol\":{\"keccak256\":\"0xd148032e0335e7aaf573e84ed4189df6e8e3fc1940dff4c8378a5b0a642e88a5\",\"urls\":[\"bzzr://c53cd92b2046812517ef784b77cadbc37a49b475aefefd74e5b4b809f1513b4e\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/external/proxy/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x2cd963259f6c9f76685b2c09f2a66043fbcd7118e699e69347ea08f1e5ffb1da\",\"urls\":[\"bzzr://6bb2b6c1731558b1cb2eaac144087c66070de794c123d4698ae6d6fe4799430a\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/interfaces/IMarket.sol\":{\"keccak256\":\"0x4a4c909f60e685f55a3d6e9b3a3f7630987c18375a8c4d58c6381761662a43c7\",\"urls\":[\"bzzr://57935103d97a8e737f0405e2e002f5750bae0c1a9862a7bca5e76e2797437019\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/interfaces/IMarketUtility.sol\":{\"keccak256\":\"0x08e98bc9d2d485bea32caa4270abbafc55a8989580f44c2f7579bc4e738c1d3c\",\"urls\":[\"bzzr://d40f536318aabb7b603282a48a5ef9b64cf0b17bf43c90fd69db77d12e1d099c\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/interfaces/IToken.sol\":{\"keccak256\":\"0x6167c87dd772d818a20165a48f935d37b573675b65e08c2ea11d4de16b83eafe\",\"urls\":[\"bzzr://65f569fc8fe70293710eeebb3bdbbae40866a510f0a2def790586bdd899092d4\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/interfaces/Iupgradable.sol\":{\"keccak256\":\"0x976ee433714079b695c5ab305f7f51cb5e2f3304f536dce0de7a852ed92905fe\",\"urls\":[\"bzzr://6b800149fdfd548fc3660e5a4d672c9133d0306b0d4594c5c63f8858f48d33dc\"]},\"/home/madan/Documents/PlotX/PlotxContract/contracts/mock/MockMarketRegistry.sol\":{\"keccak256\":\"0xf078570065717723bd79e2e1a19b566eb4a986fe115963c2be6462e088304522\",\"urls\":[\"bzzr://28bdabeb1ae0bc9dca565278111d5d7a74a8c23c12dfe3c14b29cd261498ae1e\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "57:178:56:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;57:178:56;;;;;;;",
  "deployedSourceMap": "57:178:56:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25750:921:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25750:921:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;25750:921:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;25750:921:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;25750:921:3;;;;;;;;;;;;;;;;;;;;;15826:815;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15826:815:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;15826:815:3;;;;;;;;:::i;108:125:56:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;108:125:56;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;108:125:56;;;;;;;;:::i;12739:399:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12739:399:3;;;:::i;14026:148::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14026:148:3;;;:::i;4500:535::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4500:535:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;4500:535:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4500:535:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4500:535:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4500:535:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4500:535:3;;-1:-1:-1;4500:535:3;;-1:-1:-1;;;;;4500:535:3:i;1092:748:15:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;1092:748:15;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1092:748:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1092:748:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1092:748:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1092:748:15;;-1:-1:-1;;1092:748:15;;;-1:-1:-1;;;1092:748:15;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1092:748:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4110:129:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4110:129:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4110:129:3;-1:-1:-1;;;;;4110:129:3;;:::i;:::-;;;;;;;;;;;;;;;;;;2621:508:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2621:508:15;;;:::i;:::-;;;;-1:-1:-1;;;;;2621:508:15;;;;;;;;;;;;;;2360:84:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2360:84:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2360:84:3;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2360:84:3;;;;;-1:-1:-1;;;;;2360:84:3;;;;;;;;;;;;;;;;;;;;;;2780:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2780:23:3;;;:::i;1523:182:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1523:182:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1523:182:16;-1:-1:-1;;;;;1523:182:16;;:::i;2810:35:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2810:35:3;;;:::i;1846:106:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1846:106:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1846:106:15;-1:-1:-1;;;;;1846:106:15;;:::i;:::-;;;;;;;;;;;;;;;;2739:32:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2739:32:3;;;:::i;18180:160::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18180:160:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;18180:160:3;;;;;;;;;;;;;;;;;:::i;9418:350::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9418:350:3;;;:::i;319:149:15:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:149:15;;;:::i;24671:840:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24671:840:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;24671:840:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;24671:840:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;24671:840:3;;;;;;;;;;;;;;;;;;;22255:207;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22255:207:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22255:207:3;-1:-1:-1;;;;;;22255:207:3;;:::i;:::-;;;;-1:-1:-1;;;;;;22255:207:3;;;;;;;;;;;;;;;;;;;;;2186:429:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2186:429:15;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;2186:429:15;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2186:429:15;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2186:429:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2186:429:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2186:429:15;;-1:-1:-1;;2186:429:15;;;-1:-1:-1;;;2186:429:15;;;;;;;;;;;:::i;3987:115:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3987:115:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3987:115:3;-1:-1:-1;;;;;3987:115:3;;:::i;19236:174::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19236:174:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19236:174:3;;-1:-1:-1;;;;;;19236:174:3;;;;;-1:-1:-1;;;;;19236:174:3;;:::i;8202:570::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8202:570:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8202:570:3;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;8202:570:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8202:570:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;8202:570:3;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;8202:570:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8202:570:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;8202:570:3;;-1:-1:-1;8202:570:3;-1:-1:-1;8202:570:3;:::i;5098:724::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5098:724:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5098:724:3;;;;-1:-1:-1;;;;;5098:724:3;;;;;;;;;;;;:::i;20768:782::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20768:782:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;20768:782:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;18916:312::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18916:312:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;;18916:312:3;;;;;;;;:::i;16813:395::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16813:395:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16813:395:3;;:::i;20004:266::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20004:266:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;20004:266:3;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;20004:266:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;20004:266:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;20004:266:3;;-1:-1:-1;20004:266:3;-1:-1:-1;20004:266:3;;;;;;;;;;;;:::i;14254:149::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14254:149:3;;;:::i;23465:362::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23465:362:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23465:362:3;-1:-1:-1;;;;;23465:362:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;23465:362:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;23465:362:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;23465:362:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;23465:362:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;23465:362:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10989:1652;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10989:1652:3;;;;;;;:::i;21897:294::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21897:294:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;21897:294:3;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;21897:294:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;21897:294:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;21897:294:3;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;21897:294:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;21897:294:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;21897:294:3;;-1:-1:-1;21897:294:3;-1:-1:-1;21897:294:3;;;;;;-1:-1:-1;;;;;21897:294:3;;:::i;7166:445::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7166:445:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7166:445:3;;-1:-1:-1;;;;;7166:445:3;;;;;-1:-1:-1;;;;;7166:445:3;;:::i;8973:354::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8973:354:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8973:354:3;;;;;;;;;;:::i;1088:28:16:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1088:28:16;;;:::i;6111:473:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6111:473:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6111:473:3;;;;;;;;;;;;;;;;;;;:::i;14845:745::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14845:745:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;14845:745:3;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;14845:745:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14845:745:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14845:745:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;14845:745:3;;;;;;;;-1:-1:-1;14845:745:3;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;14845:745:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14845:745:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14845:745:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;14845:745:3;;;;;;;;-1:-1:-1;14845:745:3;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;14845:745:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14845:745:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14845:745:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;14845:745:3;;;;;;;;-1:-1:-1;14845:745:3;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;14845:745:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14845:745:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14845:745:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;14845:745:3;;-1:-1:-1;;14845:745:3;;;-1:-1:-1;;;;;;;14845:745:3;;;;;;;;;;;-1:-1:-1;14845:745:3;;;;;;;;;:::i;2623:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2623:30:3;;;:::i;24018:202::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24018:202:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;24018:202:3;-1:-1:-1;;;;;24018:202:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13146:801;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13146:801:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13146:801:3;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;13146:801:3;;;;;;;;;;;;;;17356:662;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17356:662:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17356:662:3;;:::i;25750:921::-;25959:11;:18;26017:16;:23;25798:29;;;;;;25905:14;;26078:44;25959:18;26017:23;26078:44;:22;:44;:::i;:::-;26064:59;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;26064:59:3;-1:-1:-1;26049:74:3;-1:-1:-1;26161:44:3;26162:16;26184:20;26161:44;:22;:44;:::i;:::-;26147:59;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;26147:59:3;-1:-1:-1;26132:74:3;-1:-1:-1;26249:44:3;26250:16;26272:20;26249:44;:22;:44;:::i;:::-;26235:59;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;26235:59:3;-1:-1:-1;26215:79:3;-1:-1:-1;26307:9:3;26303:361;26325:16;26322:1;:19;26303:361;;;26363:9;26359:296;26381:20;26378:1;:23;26359:296;;;26443:21;;;;:18;:21;;;;;;;;:24;;;;;;;;:38;26421:19;;-1:-1:-1;;;26443:38:3;;;-1:-1:-1;;;;;26443:38:3;;26421:19;;26434:5;;26421:19;;;;;;;;;;;:60;-1:-1:-1;;;;;26421:60:3;;;-1:-1:-1;;;;;26421:60:3;;;;;26516:1;26494:12;26507:5;26494:19;;;;;;;;;;;;;:23;;;;;26565:16;26582:1;26565:19;;;;;;;;;;;;;;;;;;:40;26557:66;;;-1:-1:-1;;;;;26557:66:3;;;;-1:-1:-1;;;;;26565:40:3;;;;26557:64;;:66;;;;;;;;;;26565:40;26557:66;;;5:2:-1;;;;30:1;27;20:12;5:2;26557:66:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26557:66:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;26557:66:3;26530:24;;:17;;26548:5;;26530:24;;;;;;;;;;;;;;;:93;26636:7;;;;;26403:3;26359:296;;;-1:-1:-1;26343:3:3;;26303:361;;;;25750:921;;;;;;:::o;15826:815::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;15969:26:3;;;15940;15969;;;:10;:26;;;;;;;;:53;;;;16061:55;;;;15969:53;16148:52;;;15969:40;;;;16250:47;16343:9;;15969:53;;16061:55;;16148:52;-1:-1:-1;;;16250:47:3;;;;;;;16343:9;;;;16362:69;16343:9;15980:14;16061:55;16362:14;:69::i;:::-;16440:79;;;-1:-1:-1;;;;;16440:79:3;;16505:4;16440:79;;;;;;;;;;;;-1:-1:-1;;;;;16440:38:3;;;;;16485:18;;16440:79;;;;;;;;;;;;;;;16485:18;16440:38;:79;;;5:2:-1;;;;30:1;27;20:12;5:2;16440:79:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;16533:37:3;;;16565:4;16533:37;;;;-1:-1:-1;;;;;16533:37:3;;;-1:-1:-1;16533:37:3;;-1:-1:-1;16533:37:3;;;;;;;-1:-1:-1;16533:37:3;16579:54;16594:16;16612:6;16620:12;16579:14;:54::i;:::-;1451:1:16;;;;;15826:815:3;;;:::o;108:125:56:-;203:9;;180:48;;203:9;;;-1:-1:-1;;;;;203:9:56;215:3;220:7;180:14;:48::i;:::-;108:125;;:::o;12739:399:3:-;12836:1;12796:8;:22;12805:12;:10;:12::i;:::-;-1:-1:-1;;;;;12796:22:3;-1:-1:-1;;;;;12796:22:3;;;;;;;;;;;;:37;;;:41;12788:50;;;;;;12847:21;12871:66;12899:8;:22;12908:12;:10;:12::i;:::-;-1:-1:-1;;;;;12899:22:3;;;;;;;;;;;;-1:-1:-1;12899:22:3;:37;;;12871:23;;;:66;:27;:66;:::i;:::-;12954:9;;:34;;;-1:-1:-1;;;;;12954:34:3;;12982:4;12954:34;;;;;;12847:90;;-1:-1:-1;12847:90:3;;12954:9;;;;-1:-1:-1;;;;;12954:9:3;;:19;;:34;;;;;;;;;;;;;;;:9;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;12954:34:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12954:34:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12954:34:3;:50;12946:59;;;;;;13021:8;:22;13030:12;:10;:12::i;:::-;-1:-1:-1;;;;;13021:22:3;;;;;;;;;;;;;;-1:-1:-1;13021:22:3;;;:37;;13014:44;13090:9;;13067:63;;13090:9;;;;;13102:12;:10;:12::i;:::-;13116:13;13067:14;:63::i;:::-;12739:399;:::o;14026:148::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;14107:20:3;;;;14106:21;14098:30;;;;;;-1:-1:-1;14139:20:3;:27;;-1:-1:-1;;14139:27:3;14162:4;14139:27;;;14026:148::o;4500:535::-;4659:2;;-1:-1:-1;;;;;4659:2:3;4666:10;4651:25;4643:34;;;;;;4712:8;4686:23;:34;4729:9;:30;;-1:-1:-1;;;;;4729:30:3;;;;;-1:-1:-1;;;;;;4729:30:3;;;;;;;;;;4788:2;;:25;;;-1:-1:-1;;;;;4788:25:3;;-1:-1:-1;;;;;4788:25:3;;;;;;-1:-1:-1;;4788:2:3;;;;;:19;;:25;;;;;;;;;;;;;;;:2;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;4788:25:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4788:25:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4788:25:3;4822:15;:27;;-1:-1:-1;;;;;;4822:27:3;-1:-1:-1;;;;;4822:27:3;;;;;4788:25;-1:-1:-1;4889:30:3;4904:14;4889;:30::i;:::-;4858:13;:62;;-1:-1:-1;;;;;;4858:62:3;-1:-1:-1;;;;;4858:62:3;;;;;;;;4929:56;;;-1:-1:-1;;;;;4929:56:3;;;;;;;;;;;;;;;;;;;;;;;:13;;;;;:24;;:56;;;;;;;;;;;-1:-1:-1;4929:56:3;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4929:56:3;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4929:56:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4994:15:3;:33;;-1:-1:-1;;;;;;4994:33:3;-1:-1:-1;;;;;4994:33:3;;;;;;;;;;;-1:-1:-1;;;;;;4500:535:3:o;1092:748:15:-;-1:-1:-1;;;;;1301:19:15;;;;;;:6;:19;;;;;;1248:12;;1281:91;;1288:11;;1322:12;:10;:12::i;:::-;1336:17;1355:4;1361;1367;1281:6;:91::i;:::-;1273:137;;;;-1:-1:-1;;;;;1273:137:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1442:19:15;;;;;;1466:1;1442:19;;;;;;;;;:26;;;:23;:26;:::i;:::-;1420:6;:19;1427:11;-1:-1:-1;;;;;1420:19:15;-1:-1:-1;;;;;1420:19:15;;;;;;;;;;;;:48;;;;1556:12;1570:23;1605:4;-1:-1:-1;;;;;1597:18:15;1633:17;1652:11;1616:48;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;-1:-1;;;;;1616:48:15;;;;;;;;;;;-1:-1:-1;1616:48:15;;;26:21:-1;;;-1:-1;;22:32;6:49;;1616:48:15;;;;;;;;1597:68;;1616:48;;-1:-1:-1;1616:48:15;;;-1:-1:-1;1597:68:15;;;;1616:48;1597:68;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1597:68:15;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1555:110:15;;;;1684:7;1676:48;;;;;-1:-1:-1;;;;;1676:48:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;1739:67;1763:11;1776:10;1788:17;1739:67;;;;-1:-1:-1;;;;;1739:67:15;-1:-1:-1;;;;;1739:67:15;;;;;;-1:-1:-1;;;;;1739:67:15;-1:-1:-1;;;;;1739:67:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1739:67:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:10;1092:748;-1:-1:-1;;;;;;;1092:748:15:o;4110:129:3:-;4200:2;;:31;;;-1:-1:-1;;;;;4200:31:3;;-1:-1:-1;;;;;4200:31:3;;;;;;;;;4178:4;;4200:2;;;;;:21;;:31;;;;;;;;;;;;;;;:2;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;4200:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4200:31:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4200:31:3;;4110:129;-1:-1:-1;;4110:129:3:o;2621:508:15:-;2663:22;2700:10;2722:4;2700:27;2697:426;;;2743:18;2764:8;;2743:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;;;2802:8:15;2988:17;2982:24;-1:-1:-1;;;;;2978:73:15;;-1:-1:-1;2840:225:15;;-1:-1:-1;2840:225:15;;-1:-1:-1;3102:10:15;2697:426;2621:508;:::o;2360:84:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2360:84:3;;;-1:-1:-1;;;;;;;;2360:84:3;;;;;;;;:::o;2780:23::-;;;;;;-1:-1:-1;;;;;2780:23:3;;:::o;1523:182:16:-;1591:4;1628:13;;1660:25;;;-1:-1:-1;;;;;1660:25:16;;-1:-1:-1;;;;;1660:25:16;;;;;;-1:-1:-1;;;;;1628:13:16;;;;1660:37;;;1628:13;;1660:19;;:25;;;;;;;;;;;;;;;1628:13;1660:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1660:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1660:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1660:25:16;-1:-1:-1;;;;;1660:37:16;;;1523:182;-1:-1:-1;;;1523:182:16:o;2810:35:3:-;;;-1:-1:-1;;;;;2810:35:3;;:::o;1846:106:15:-;-1:-1:-1;;;;;1933:12:15;1900:13;1933:12;;;:6;:12;;;;;;;1846:106::o;2739:32:3:-;;;;;;:::o;18180:160::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;18296:36:3;18311:6;18319:3;18324:7;18296:14;:36::i;:::-;18180:160;;;;:::o;9418:350::-;9462:30;9545:4;9462:91;;9584:5;-1:-1:-1;;;;;9584:16:3;;:18;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9584:18:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9584:18:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9584:18:3;-1:-1:-1;;;;;9570:32:3;:10;:32;9562:70;;;;;-1:-1:-1;;;;;9562:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;9641:2;:24;;9654:10;-1:-1:-1;;;;;;9641:24:3;;;;;;;;;-1:-1:-1;9674:26:3;;;;;;;;9734:25;;;-1:-1:-1;;;;;9734:25:3;;-1:-1:-1;;;;;9734:25:3;;;;;;-1:-1:-1;;;;;9734:2:3;;;;:19;;:25;;;;;;;;;;;;;;;:2;:25;;;5:2:-1;;;;30:1;27;20:12;5:2;9734:25:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9734:25:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9734:25:3;9709:10;:51;;-1:-1:-1;;;;;;9709:51:3;-1:-1:-1;;;;;9709:51:3;;;;;;;;;-1:-1:-1;9418:350:3:o;319:149:15:-;430:3;319:149;:::o;24671:840:3:-;-1:-1:-1;;;;;24879:14:3;;24845:31;24879:14;;;:8;:14;;;;;;;;:34;:41;24779:24;;;;24932:27;;;;;:66;;;24975:23;24963:9;:35;24932:66;24929:575;;;25030:7;25051:35;;;25048:103;;-1:-1:-1;;;25112:27:3;;25048:103;25185:30;25213:1;25185:23;:8;25198:9;25185:23;:12;:23;:::i;:::-;:27;:30;:27;:30;:::i;:::-;25171:45;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;25171:45:3;-1:-1:-1;25161:55:3;-1:-1:-1;25257:30:3;25285:1;25257:23;:8;25270:9;25257:23;:12;:23;:::i;:30::-;25243:45;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;25243:45:3;-1:-1:-1;25227:61:3;-1:-1:-1;25315:9:3;25299:196;25331:8;25326:1;:13;25299:196;;-1:-1:-1;;;;;25372:14:3;;;;;;:8;:14;;;;;;;;:34;:37;;25407:1;;25372:37;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25372:37:3;25359:7;25367:1;25359:10;;;;;;;;;;;;;:50;-1:-1:-1;;;;;25359:50:3;;;-1:-1:-1;;;;;25359:50:3;;;;;25453:7;25461:1;25453:10;;;;;;;;;;;;;;-1:-1:-1;;;;;25445:36:3;;:38;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25445:38:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25445:38:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25445:38:3;25423:16;;-1:-1:-1;;;;;25422:61:3;;;;25423:13;;25437:1;;25423:16;;;;;;;;;;;;;;;25422:61;25341:3;;25299:196;;;;24929:575;;24671:840;;;;;;;:::o;22255:207::-;22317:14;;-1:-1:-1;;;;;;;;;;;22360:16:3;;;22357:98;;;-1:-1:-1;;22422:23:3;;22399:4;;22357:98;22255:207;;;:::o;2186:429:15:-;2350:4;2367:12;2382:78;2418:5;2425:4;2431:7;2440:17;2401:57;;;;;;;;;;;-1:-1:-1;;;;;2401:57:15;-1:-1:-1;;;;;2401:57:15;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2401:57:15;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2401:57:15;;;2391:68;;;;;;2382:8;:78::i;:::-;2367:93;;2470:14;2487:33;2497:4;2503;2509;2515;2487:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;2487:33:15;;-1:-1:-1;;2487:33:15;;;-1:-1:-1;;;;;;;2538:20:15;;2530:50;;;;;-1:-1:-1;;;;;2530:50:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2592:15:15;;;;;;;-1:-1:-1;;2186:429:15;;;;;;;;;:::o;3987:115:3:-;-1:-1:-1;;;;;4065:20:3;4043:4;4065:20;;;:10;:20;;;;;:29;;;;3987:115::o;19236:174::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;19352:13:3;;:50;;;-1:-1:-1;;;;;19352:50:3;;-1:-1:-1;;;;;;19352:50:3;;;;;;-1:-1:-1;;;;;19352:50:3;;;;;;;;;:13;;;;;:37;;:50;;;;;:13;;:50;;;;;;;:13;;:50;;;5:2:-1;;;;30:1;27;20:12;5:2;19352:50:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19352:50:3;;;;19236:174;;;:::o;8202:570::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;8368:56:3;;;8360:65;;;;;;8438:9;8434:331;8452:26;;;8434:331;;;8501:18;8531:22;;8554:1;8531:25;;;;;;;;;;;;;-1:-1:-1;;;;;8531:25:3;-1:-1:-1;;;;;8523:52:3;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8523:54:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8523:54:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8523:54:3;;;;;8606:13;;:46;;-1:-1:-1;;;;;8606:46:3;;-1:-1:-1;;;;;8606:46:3;;;;;;;;;8523:54;;-1:-1:-1;8588:15:3;;8606:13;;;;:34;;:46;;;;;8523:54;;8606:46;;;;;;;;:13;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;8606:46:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8606:46:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8606:46:3;8703:52;;;;;;;;;8606:46;;-1:-1:-1;8703:52:3;8718:22;;8741:1;8718:25;;;;;;;;;;;;;-1:-1:-1;;;;;8718:25:3;-1:-1:-1;;;;;8703:52:3;;;;;8745:9;8703:52;;;;;8663:16;8680;;8697:1;8680:19;;;;;;;;;;;;;8663:37;;;;;;;;;;;;;;;;;:92;;:37;;:92;;;;;;;;;-1:-1:-1;;;8663:92:3;-1:-1:-1;;;;;;;;;;;8663:92:3;;;-1:-1:-1;;;;;;8663:92:3;;;;;;;;;;;;;;-1:-1:-1;;8663:92:3;8480:3;8434:331;;;;8202:570;;;;;:::o;5098:724::-;5275:12;:10;:12::i;:::-;5256:15;;-1:-1:-1;;;;;5256:15:3;;;:31;;;5248:40;;;;;;5305:11;:18;:23;5297:32;;;;;;5338:47;5360:24;5338:21;:47::i;:::-;5394;5416:24;5394:21;:47::i;:::-;5450:23;5461:7;5470:2;5450:10;:23::i;:::-;5482:25;5493:8;5503:3;5482:10;:25::i;:::-;5516:23;5527:6;5535:3;5516:10;:23::i;:::-;5554:9;5550:265;5572:11;:18;5568:22;;5550:265;;;5610:21;;;;:18;:21;;;;;;;;:24;;;;;;;;;:60;;-1:-1:-1;;;;;5610:60:3;;-1:-1:-1;;5610:60:3;;;;;;;;-1:-1:-1;5683:24:3;;;;;:60;;;;;;;;5756:18;;5610:21;;5756:12;:18::i;:::-;5787;5800:1;5803;5787:12;:18::i;:::-;5592:3;;5550:265;;20768:782;20954:20;20963:10;20954:8;:20::i;:::-;20946:29;;;;;;-1:-1:-1;;;;;20987:31:3;;2535:42;20987:31;20984:236;;;-1:-1:-1;;;;;21064:15:3;;;;;;:8;:15;;;;;:30;;;:42;;21099:6;21064:42;:34;:42;:::i;:::-;-1:-1:-1;;;;;21031:15:3;;;;;;:8;:15;;;;;:30;;:75;20984:236;;;-1:-1:-1;;;;;21167:15:3;;;;;;:8;:15;;;;;:31;;;:43;;21203:6;21167:43;:35;:43;:::i;:::-;-1:-1:-1;;;;;21133:15:3;;;;;;:8;:15;;;;;:31;;:77;20984:236;-1:-1:-1;;;;;21232:15:3;;;;;;:8;:15;;;;;;;;21272:10;21232:51;;:39;;:51;;;;;;;;21228:199;;-1:-1:-1;;;;;21296:15:3;;;;;;:8;:15;;;;;;;;:35;;;27:10:-1;;39:1;23:18;;;45:23;;21296:52:3;;;;;;;;;-1:-1:-1;;;;;;21296:52:3;21337:10;21296:52;;;;;;21359:51;;:39;;;;:51;;;;;;:58;;-1:-1:-1;;21359:58:3;;;;;;21228:199;21440:102;;;;;;;;;;;;-1:-1:-1;;;;;21440:102:3;;;;;;;;;;;;;;;;;;;;;21521:10;;21440:102;;;;;;;;;;;;;20768:782;;;;;;:::o;18916:312::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;19018:16:3;;;19015:206;;;19106:23;:31;;;19015:206;;;19164:13;;:47;;;-1:-1:-1;;;;;19164:47:3;;-1:-1:-1;;;;;;19164:47:3;;;;;;;;;;;;;;-1:-1:-1;;;;;19164:13:3;;;;:34;;:47;;;;;:13;;:47;;;;;;;;:13;;:47;;;5:2:-1;;;;30:1;27;20:12;19015:206:3;18916:312;;;:::o;16813:395::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;16933:38:3;;16908:22;16933:38;;;:17;:38;;;;;;;16980:48;;-1:-1:-1;;;;;16980:48:3;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16933:38:3;;;;;;16980;;:48;;;;;16908:22;16980:48;;;;;16908:22;16933:38;16980:48;;;5:2:-1;;;;30:1;27;20:12;5:2;16980:48:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;17042:38:3;;;17074:5;17042:38;;;;-1:-1:-1;;;;;17042:38:3;;;-1:-1:-1;17042:38:3;;-1:-1:-1;17042:38:3;;;;;;;;-1:-1:-1;;;;;17110:26:3;;;17089:18;17110:26;;;:10;:26;;;;;;:52;;;17171:9;;:29;;-1:-1:-1;;;;;17171:29:3;;;;;;;;;;17110:52;;17171:9;;;;;;:14;;:29;;;;;;;;;;;17089:18;17171:9;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;17171:29:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;20004:266:3;20152:20;20161:10;20152:8;:20::i;:::-;20144:29;;;;;;20200:10;-1:-1:-1;;;;;20187:75:3;;20212:12;;20226:13;20241:10;20253:8;20187:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;20187:75:3;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;20187:75:3;;;;-1:-1:-1;20187:75:3;;-1:-1:-1;;;;;;;20187:75:3;20004:266;;;;;:::o;14254:149::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;14335:20:3;;;;14327:29;;;;;;-1:-1:-1;14367:20:3;:28;;-1:-1:-1;;14367:28:3;;;14254:149::o;23465:362::-;23536:19;23556:25;23582;23616:28;23645:27;23674:28;23703:23;23727:19;23748:25;23798:10;-1:-1:-1;;;;;23790:27:3;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23790:29:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23790:29:3;;;;;;39:16:-1;36:1;17:17;2:54;101:4;23790:29:3;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:3;5:12;;2:2;;;30:1;27;20:12;2:2;23790:29:3;;;;;;;;;;;;;;-1:-1:-1;;;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;23790:29:3;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;23790:29:3;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;23790:29:3;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;23790:29:3;;;;;;;-1:-1:-1;;;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;-1:-1;;;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;23790:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23783:36;;;;;;;;;;;;;;;;;;23465:362;;;;;;;;;;;:::o;10989:1652::-;11085:25;11113:31;;;:18;:31;;;;;;;;:53;;;;;;;;:71;;;-1:-1:-1;;;;;11113:71:3;11196:31;;11193:98;;11248:17;-1:-1:-1;;;;;11240:39:3;;:41;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11240:41:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11240:41:3;;;;11193:98;11381:1;11302:31;;;:18;:31;;;;;;;;:53;;;;;;;;:67;-1:-1:-1;;;11302:67:3;;-1:-1:-1;;;;;11302:67:3;:81;11299:292;;11406:12;11439:31;;;:18;:31;;;;;;;;:53;;;;;;;;:67;11422:85;;-1:-1:-1;;;11439:67:3;;-1:-1:-1;;;;;11439:67:3;11422:16;:85::i;:::-;11396:111;-1:-1:-1;11542:37:3;;-1:-1:-1;11537:43:3;;-1:-1:-1;;;;;;;11537:43:3;;11526:7;:54;;11518:63;;;;;;11299:292;;11600:23;11625:21;11648:18;11678:16;11695:20;11678:38;;;;;;;;;;;;;;;:59;;;;;;;;;;-1:-1:-1;;;;;11678:59:3;-1:-1:-1;;;;;11670:86:3;;:88;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11670:88:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11670:88:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11670:88:3;;;;;;;;;;;11767:13;;:22;;-1:-1:-1;;;;;11767:22:3;;;;11670:88;;-1:-1:-1;11670:88:3;;-1:-1:-1;11670:88:3;-1:-1:-1;;;;;;11767:13:3;;:20;;:22;;;;;:13;;:22;;;;;;;:13;;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;11767:22:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11767:22:3;;;;11798:23;11824:62;11852:11;11865:20;11824:27;:62::i;:::-;11798:88;;11895:23;11921:11;11933;11921:24;;;;;;;;;;;;;;;;;;;;:40;11990:13;;:42;;;-1:-1:-1;;;;;11990:42:3;;-1:-1:-1;;;;;11990:42:3;;;;;;;;;-1:-1:-1;;;11921:40:3;;;-1:-1:-1;;;;;11921:40:3;;-1:-1:-1;11990:13:3;;;:30;;:42;;;;;;;;;;:13;:42;;;5:2:-1;;;;30:1;27;20:12;5:2;11990:42:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11990:42:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11990:42:3;;-1:-1:-1;12067:52:3;12113:5;12067:41;12084:23;-1:-1:-1;;;;;12084:20:3;;12105:1;12084:23;:20;:23;:::i;:::-;12067:12;;:41;:16;:41;:::i;:::-;:45;:52;:45;:52;:::i;:::-;12041:79;;12129:16;12148;12165:20;12148:38;;;;;;;;;;;;;;;;:47;;-1:-1:-1;;;12148:47:3;;;;;;-1:-1:-1;12230:103:3;;;;12231:78;12236:57;12230:103;12236:34;:12;-1:-1:-1;;;;;12236:34:3;;;:16;:34;:::i;:57::-;12299:9;-1:-1:-1;;;;;12295:13:3;:2;:13;-1:-1:-1;;;;;12231:78:3;:4;:78::i;:::-;12230:84;:103;:84;:103;:::i;:::-;12204:130;-1:-1:-1;12343:16:3;12369:103;;;;12370:78;12375:57;12369:103;12375:34;:12;-1:-1:-1;;;;;12375:34:3;;;:16;:34;:::i;:57::-;12438:9;-1:-1:-1;;;;;12434:13:3;:2;:13;-1:-1:-1;;;;;12370:78:3;:4;:78::i;12369:103::-;12343:130;;12482:103;12496:11;12509:20;12531:9;12542;12553:16;12571:13;12482;:103::i;:::-;12594:8;:22;12603:12;:10;:12::i;:::-;-1:-1:-1;;;;;12594:22:3;;;;;;;;;;;;-1:-1:-1;12594:22:3;:37;;;;:39;;;;;;;-1:-1:-1;;;;;;;;;;;;10989:1652:3:o;21897:294::-;22067:20;22076:10;22067:8;:20::i;:::-;22059:29;;;;;;22122:5;-1:-1:-1;;;;;22102:81:3;22110:10;-1:-1:-1;;;;;22102:81:3;;22129:7;;22138:16;;22156:10;22168:14;22102:81;;;;;;;;;;;;;;;-1:-1:-1;;;;;22102:81:3;-1:-1:-1;;;;;22102:81:3;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;22102:81:3;;;;;;;;;;;;;-1:-1:-1;22102:81:3;;;;;;;1:33:-1;99:1;81:16;;;74:27;22102:81:3;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;22102:81:3;;;;-1:-1:-1;22102:81:3;;-1:-1:-1;;;;;;;;;22102:81:3;21897:294;;;;;;;:::o;7166:445::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;7324:16:3;:23;7356:44;7378:21;7356;:44::i;:::-;7413:9;7409:195;7431:11;:18;7427:22;;7409:195;;;7467:21;;;;:18;:21;;;;;;;;:43;;;;;;;;:79;;-1:-1:-1;;7467:79:3;-1:-1:-1;;;;;7467:79:3;;;;;7557:37;7467:21;:43;7557:12;:37::i;:::-;7451:3;;7409:195;;;;1451:1:16;7166:445:3;;;:::o;8973:354::-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;-1:-1:-1;;;;;9135:32:3;;9127:41;;;;;;9277:42;;;-1:-1:-1;;;;;9277:42:3;;-1:-1:-1;;;;;9277:42:3;;;;;;;;;9254:13;;9277:22;;;;;:42;;;;;9177:37;;9277:42;;;;;;;9177:37;9277:22;:42;;;5:2:-1;;;;30:1;27;20:12;1088:28:16;;;-1:-1:-1;;;;;1088:28:16;;:::o;6111:473:3:-;1330:10:16;1351:13;1383:25;;;-1:-1:-1;;;;;1383:25:16;;-1:-1:-1;;;;;1383:25:16;;;;;;-1:-1:-1;;;;;1351:13:16;;;;1412:10;;1351:13;;1383:19;;:25;;;;;;;;;;;;;;;1351:13;1383:25;;;5:2:-1;;;;30:1;27;20:12;5:2;1383:25:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1383:25:16;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1383:25:16;-1:-1:-1;;;;;1383:39:16;;1375:66;;;;;-1:-1:-1;;;;;1375:66:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1375:66:16;;;;;;;;;;;;;;;6279:3:3;6260:16;-1:-1:-1;;;;;6260:22:3;;6252:31;;;;;;6314:11;:18;6341:45;6352:15;6369:16;6341:10;:45::i;:::-;6399:9;6395:182;6417:16;:23;6413:27;;6395:182;;;6458:31;;;;:18;:31;;;;;;;;:34;;;;;;;;:70;;-1:-1:-1;;6458:70:3;-1:-1:-1;;;;;6458:70:3;;;;;6539:28;6458:31;:34;6539:12;:28::i;:::-;6442:3;;6395:182;;14845:745;15123:20;15132:10;15123:8;:20::i;:::-;15115:29;;;;;;15180:10;;:30;;;-1:-1:-1;;;;;15180:30:3;;;;15153:17;;-1:-1:-1;;;;;15180:10:3;;:28;;:30;;;;;;;;;;;;;;:10;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;15180:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15180:30:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15180:30:3;;;;;;;;;;;;;;;;15153:58;;15259:83;;;;;;;;15272:10;-1:-1:-1;;;;;15259:83:3;;;;;15284:5;-1:-1:-1;;;;;15259:83:3;;;;;15291:16;15259:83;;;;15309:14;15259:83;;;;15325:16;15259:83;;;15220:10;:22;15231:10;-1:-1:-1;;;;;15220:22:3;-1:-1:-1;;;;;15220:22:3;;;;;;;;;;;;:36;;:122;;;;;;;;;;;;;-1:-1:-1;;;;;15220:122:3;;;;;-1:-1:-1;;;;;15220:122:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15220:122:3;;;;;-1:-1:-1;;;;;15220:122:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15383:10;15351:17;:29;15369:10;-1:-1:-1;;;;;15351:29:3;-1:-1:-1;;;;;15351:29:3;;;;;;;;;;;;;:42;;;;;-1:-1:-1;;;;;15351:42:3;;;;;-1:-1:-1;;;;;15351:42:3;;;;;;15402:10;;;;;;;;;-1:-1:-1;;;;;15402:10:3;-1:-1:-1;;;;;15402:37:3;;15440:13;15455;15470:11;15483:2;15487:12;15501:6;15402:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15402:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15402:106:3;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15402:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15402:106:3;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15402:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15402:106:3;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15402:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15402:106:3;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;15402:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15402:106:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;15522:60:3;;;-1:-1:-1;;;;;15522:60:3;;;;-1:-1:-1;;;;;15522:60:3;;;;;;;;;;;;;;15536:10;;-1:-1:-1;15522:60:3;;-1:-1:-1;15522:60:3;;;;;;;;14845:745;;;;;;;;;;:::o;2623:30::-;;;-1:-1:-1;;;;;2623:30:3;;:::o;24018:202::-;-1:-1:-1;;;;;24148:15:3;24090:19;24148:15;;;:8;:15;;;;;:31;;;;24181:30;;;;;24148:31;;24018:202::o;13146:801::-;13254:23;13313:31;;;:18;:31;;;;;;;;:53;;;;;;;;:67;-1:-1:-1;;;13313:67:3;;-1:-1:-1;;;;;13313:67:3;13392:28;;13389:233;;13468:14;-1:-1:-1;;;;;13460:34:3;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13460:36:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13460:36:3;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;13460:36:3;;-1:-1:-1;13389:233:3;;;13542:31;;;;:18;:31;;;;;;;;:53;;;;;;;;:70;-1:-1:-1;;;;;13542:70:3;;-1:-1:-1;13389:233:3;13630:19;13652:11;13664;13652:24;;;;;;;;;;;;;;;;;:39;-1:-1:-1;;;;;13652:39:3;;;;-1:-1:-1;13709:36:3;;:20;;13652:39;13709:36;:20;:36;:::i;:::-;13703:3;:42;13700:240;;;13758:23;13784:49;13818:14;13785:27;13786:3;-1:-1:-1;;;;;13785:27:3;;;:9;:27;:::i;13784:49::-;13758:75;-1:-1:-1;13869:60:3;13890:38;13758:75;13913:14;13890:38;:22;:38;:::i;:::-;-1:-1:-1;;;;;13869:20:3;;;:60;:20;:60;:::i;:::-;13843:87;;13700:240;;13146:801;;;;;;:::o;17356:662::-;17422:9;17440:8;17451;:22;17460:12;:10;:12::i;:::-;-1:-1:-1;;;;;17451:22:3;;;;;;;;;;;;-1:-1:-1;17451:22:3;;;:42;;;;:49;;-1:-1:-1;17451:49:3;;-1:-1:-1;;17576:12:3;:10;:12::i;:::-;-1:-1:-1;;;;;17567:22:3;;;;;;;;;;;;-1:-1:-1;17567:22:3;:39;;-1:-1:-1;17559:323:3;17612:3;17608:1;:7;:29;;;;;17627:10;17619:5;:18;17608:29;17559:323;;;17741:1;17666:8;:22;17675:12;:10;:12::i;:::-;-1:-1:-1;;;;;17666:22:3;-1:-1:-1;;;;;17666:22:3;;;;;;;;;;;;:42;;17709:1;17666:45;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;17666:45:3;17658:66;17725:12;:10;:12::i;:::-;17658:80;;;;;;;;;;;;;-1:-1:-1;;;;;17658:80:3;-1:-1:-1;;;;;17658:80:3;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17658:80:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17658:80:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17658:80:3;:84;17655:218;;;17757:7;;17655:218;;;17813:3;17798:11;:18;17795:67;;;17847:1;17833:15;;17795:67;17639:3;;;;;17559:323;;;17908:3;17893:11;:18;17890:59;;;17938:1;17924:15;;17890:59;17999:11;17957:8;:22;17966:12;:10;:12::i;:::-;-1:-1:-1;;;;;17957:22:3;;;;;;;;;;;;-1:-1:-1;17957:22:3;:53;-1:-1:-1;;;;;17356:662:3:o;2204:459:24:-;2262:7;2503:6;2499:45;;-1:-1:-1;2532:1:24;2525:8;;2499:45;2566:5;;;2570:1;2566;:5;:1;2589:5;;;;;:10;2581:56;;;;-1:-1:-1;;;;;2581:56:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2655:1;-1:-1:-1;2204:459:24;;;;;:::o;18598:310:3:-;18704:11;;18701:200;;-1:-1:-1;;;;;18732:21:3;;2535:42;18732:21;18729:163;;;18768:28;;-1:-1:-1;;;;;18768:19:3;;;:28;;;;;18788:7;;18768:28;;;;18788:7;18768:19;:28;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18768:28:3;18729:163;;;18842:6;-1:-1:-1;;;;;18835:23:3;;18859:10;18871:7;18835:44;;;;;;;;;;;;;-1:-1:-1;;;;;18835:44:3;-1:-1:-1;;;;;18835:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18835:44:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18835:44:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18835:44:3;18827:53;;;;;19514:228;19581:15;19609:37;19678:16;19649:46;;;;;:::i;:::-;-1:-1:-1;;;;;19649:46:3;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;19609:86:3;19514:228;-1:-1:-1;;;19514:228:3:o;834:176:24:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:24;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:179;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;;;1351:49:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:24;;;1274:179::o;2023:157:15:-;2114:58;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2114:58:15;;;;;;;2104:69;;;;;;2023:157::o;7619:504:3:-;7699:28;7730:16;:23;;;;7699:54;;7765:21;7788:18;7818:21;-1:-1:-1;;;;;7810:48:3;;:50;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7810:50:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7810:50:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7810:50:3;;;;;;;;;;7887:13;;:46;;-1:-1:-1;;;;;7887:46:3;;-1:-1:-1;;;;;7887:46:3;;;;;;;;;7810:50;;-1:-1:-1;7810:50:3;;-1:-1:-1;7869:15:3;;7887:13;;:34;;:46;;;;;;;;;;:13;:46;;;5:2:-1;;;;30:1;27;20:12;5:2;7887:46:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7887:46:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7887:46:3;7964:48;;;;;;;;-1:-1:-1;;;;;7964:48:3;;;;;;;;;;7887:46;7964:48;;;;;;7942:16;27:10:-1;;39:1;23:18;;45:23;;-1:-1;7942:71:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;7942:71:3;-1:-1:-1;;;;;;7942:71:3;;;-1:-1:-1;;;;;;7942:71:3;;;;;;;;;;;;;;8027:88;;;;;;;;;;;;;;;;;;;;;;;7887:46;;-1:-1:-1;8044:20:3;;8027:88;;;;;;;;;7619:504;;;;;:::o;6820:284::-;6929:11;:18;;6973:49;;;;;;;;-1:-1:-1;;;;;6973:49:3;;;;;;;;;;;;;;;;39:1:-1;23:18;;45:23;;6907:19:3;6956:67;;;;;;;;;;;;;;;-1:-1:-1;;;6956:67:3;-1:-1:-1;;6956:67:3;;;;-1:-1:-1;;6956:67:3;;;;;;;;;;;;;;;7037:59;;;;;;;;;;;6929:18;;;;7037:59;;;;;;;;;;;6820:284;;;:::o;3118:326:24:-;3176:7;3273:1;3269;:5;3261:44;;;;;-1:-1:-1;;;;;3261:44:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;3315:9;3331:1;3327;:5;;;;;;;3118:326;-1:-1:-1;;;;3118:326:24:o;26679:115:3:-;26738:7;26785:1;26780;26775;26771;26767;:5;:9;26766:15;;;;;;26765:21;;26679:115;-1:-1:-1;;;26679:115:3:o;9944:870::-;10129:20;;;;10128:21;10120:30;;;;;;10159:37;;:::i;:::-;10199:11;10211;10199:24;;;;;;;;;;;;;;;;10159:64;;;;;;;;;10199:24;;10159:64;-1:-1:-1;;;;;10159:64:3;;;;;-1:-1:-1;;;10159:64:3;;;;;;;;10273:16;:38;;10159:64;;-1:-1:-1;10258:75:3;;10290:20;;10273:38;;;;;;;;;;;;;;;:59;-1:-1:-1;;;;;10273:59:3;10258:14;:75::i;:::-;-1:-1:-1;;;;;10342:19:3;;;;;;:10;:19;;;;;;:35;;-1:-1:-1;;10342:35:3;10373:4;10342:35;;;10430:30;;10386:97;;-1:-1:-1;;;;;10386:97:3;;-1:-1:-1;;;;;10386:97:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10232:101;;-1:-1:-1;10342:19:3;;10386:25;;:97;;;;;10342:19;10386:97;;;;;;10342:19;;10386:97;;;5:2:-1;;;;30:1;27;20:12;5:2;10386:97:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;10497:69:3;;;;;;-1:-1:-1;;;;;10497:69:3;;;;;;;;10536:11;;-1:-1:-1;;;;;;10497:69:3;;;-1:-1:-1;10497:69:3;;;;;;;;;;;10729:31;;;;:18;:31;;;;;;;;:53;;;;;;;;;;:67;;-1:-1:-1;;;;;10575:231:3;;;-1:-1:-1;;;10575:231:3;;;-1:-1:-1;;;;;;10575:231:3;;;;;-1:-1:-1;10576:71:3;;;10575:231;;-1:-1:-1;;;;;;10575:231:3;10729:67;;;;;;;10575:231;;;;-1:-1:-1;;;;;9944:870:3:o;57:178:56:-;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;57:178:56;;;;;;;;:::o",
  "source": "pragma solidity 0.5.7;\n\nimport \"../MarketRegistry.sol\";\n\ncontract MockMarketRegistry is MarketRegistry {\n\n  function transferPlot(address payable _to, uint _amount) external {\n    _transferAsset(address(plotToken), _to, _amount);\n  }\n}",
  "sourcePath": "/home/madan/Documents/PlotX/PlotxContract/contracts/mock/MockMarketRegistry.sol",
  "ast": {
    "absolutePath": "/home/madan/Documents/PlotX/PlotxContract/contracts/mock/MockMarketRegistry.sol",
    "exportedSymbols": {
      "MockMarketRegistry": [
        27766
      ]
    },
    "id": 27767,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 27746,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:56"
      },
      {
        "absolutePath": "/home/madan/Documents/PlotX/PlotxContract/contracts/MarketRegistry.sol",
        "file": "../MarketRegistry.sol",
        "id": 27747,
        "nodeType": "ImportDirective",
        "scope": 27767,
        "sourceUnit": 7340,
        "src": "24:31:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27748,
              "name": "MarketRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7339,
              "src": "88:14:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketRegistry_$7339",
                "typeString": "contract MarketRegistry"
              }
            },
            "id": 27749,
            "nodeType": "InheritanceSpecifier",
            "src": "88:14:56"
          }
        ],
        "contractDependencies": [
          7339,
          15219,
          15298,
          26951
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 27766,
        "linearizedBaseContracts": [
          27766,
          7339,
          15219,
          26951,
          15298
        ],
        "name": "MockMarketRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 27764,
              "nodeType": "Block",
              "src": "174:59:56",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 27758,
                            "name": "plotToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5418,
                            "src": "203:9:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$26852",
                              "typeString": "contract IToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IToken_$26852",
                              "typeString": "contract IToken"
                            }
                          ],
                          "id": 27757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "195:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 27759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "195:18:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27760,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27751,
                        "src": "215:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27761,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27753,
                        "src": "220:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27756,
                      "name": "_transferAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6786,
                      "src": "180:14:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address payable,uint256)"
                      }
                    },
                    "id": 27762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "180:48:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27763,
                  "nodeType": "ExpressionStatement",
                  "src": "180:48:56"
                }
              ]
            },
            "documentation": null,
            "id": 27765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferPlot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27751,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 27765,
                  "src": "130:19:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 27750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "130:15:56",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27753,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 27765,
                  "src": "151:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27752,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "129:35:56"
            },
            "returnParameters": {
              "id": 27755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:0:56"
            },
            "scope": 27766,
            "src": "108:125:56",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 27767,
        "src": "57:178:56"
      }
    ],
    "src": "0:235:56"
  },
  "legacyAST": {
    "absolutePath": "/home/madan/Documents/PlotX/PlotxContract/contracts/mock/MockMarketRegistry.sol",
    "exportedSymbols": {
      "MockMarketRegistry": [
        27766
      ]
    },
    "id": 27767,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 27746,
        "literals": [
          "solidity",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:56"
      },
      {
        "absolutePath": "/home/madan/Documents/PlotX/PlotxContract/contracts/MarketRegistry.sol",
        "file": "../MarketRegistry.sol",
        "id": 27747,
        "nodeType": "ImportDirective",
        "scope": 27767,
        "sourceUnit": 7340,
        "src": "24:31:56",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 27748,
              "name": "MarketRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7339,
              "src": "88:14:56",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MarketRegistry_$7339",
                "typeString": "contract MarketRegistry"
              }
            },
            "id": 27749,
            "nodeType": "InheritanceSpecifier",
            "src": "88:14:56"
          }
        ],
        "contractDependencies": [
          7339,
          15219,
          15298,
          26951
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 27766,
        "linearizedBaseContracts": [
          27766,
          7339,
          15219,
          26951,
          15298
        ],
        "name": "MockMarketRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 27764,
              "nodeType": "Block",
              "src": "174:59:56",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 27758,
                            "name": "plotToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5418,
                            "src": "203:9:56",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$26852",
                              "typeString": "contract IToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IToken_$26852",
                              "typeString": "contract IToken"
                            }
                          ],
                          "id": 27757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "195:7:56",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 27759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "195:18:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27760,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27751,
                        "src": "215:3:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 27761,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27753,
                        "src": "220:7:56",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27756,
                      "name": "_transferAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6786,
                      "src": "180:14:56",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address payable,uint256)"
                      }
                    },
                    "id": 27762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "180:48:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27763,
                  "nodeType": "ExpressionStatement",
                  "src": "180:48:56"
                }
              ]
            },
            "documentation": null,
            "id": 27765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferPlot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27751,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 27765,
                  "src": "130:19:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 27750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "130:15:56",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27753,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 27765,
                  "src": "151:12:56",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27752,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:4:56",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "129:35:56"
            },
            "returnParameters": {
              "id": 27755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:0:56"
            },
            "scope": 27766,
            "src": "108:125:56",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 27767,
        "src": "57:178:56"
      }
    ],
    "src": "0:235:56"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x82762a7cb0b53c41fd44ceab21fd458f9209c98ede6ee9c622136b2a9b550f22": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "marketAdd",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "stockName",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "predictionType",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "startTime",
              "type": "uint256"
            }
          ],
          "name": "MarketQuestion",
          "type": "event"
        },
        "0x21c543dcf81b0b2e8184b8fc4a2df6dc8d1d061a049925780b1bd44e5620dcf6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "predictionPoints",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "predictionAsset",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "prediction",
              "type": "uint256"
            },
            {
              "indexed": true,
              "name": "marketAdd",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "_leverage",
              "type": "uint256"
            }
          ],
          "name": "PlacePrediction",
          "type": "event"
        },
        "0x79c0645f10d4ba8b751d7f7627d367134cbeb8c553867635a6f249a928fde261": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "marketAdd",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "totalReward",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "name": "winningOption",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "closeValue",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "roundId",
              "type": "uint256"
            }
          ],
          "name": "MarketResult",
          "type": "event"
        },
        "0x9386dbf2923cd63ff717f04d11e68ab0be3cd1bb9d8992fc9c68c0850de7c55c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "marketAdd",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "reward",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "name": "_predictionAssets",
              "type": "address[]"
            },
            {
              "indexed": false,
              "name": "incentive",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "incentiveToken",
              "type": "address"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x2d43356dee5a2f7341d0dc32f46150d4778b48cce094891980e5719a1961f218": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "predictionTime",
              "type": "uint64"
            },
            {
              "indexed": false,
              "name": "optionRangePerc",
              "type": "uint64"
            }
          ],
          "name": "MarketTypes",
          "type": "event"
        },
        "0x2b4f53869349b64d9283b604a24c045bc1090a455b336db294022b8f72ca0344": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "index",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "marketImplementation",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "feedAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "currencyName",
              "type": "bytes32"
            }
          ],
          "name": "MarketCurrencies",
          "type": "event"
        },
        "0xf9f735ef60b717f0b38565eb997a6bf6dd85498122de8b18a1e7c593aba53b8f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "marketAdd",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "raisedBy",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "proposalId",
              "type": "uint64"
            },
            {
              "indexed": false,
              "name": "proposedValue",
              "type": "uint256"
            }
          ],
          "name": "DisputeRaised",
          "type": "event"
        },
        "0xcea2bc33eef9c2bacf266c2b7b17f8f2db3c22582cb56c00467843e85d98021e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "marketAdd",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "DisputeResolved",
          "type": "event"
        },
        "0x5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "userAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "relayerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "functionSignature",
              "type": "bytes"
            }
          ],
          "name": "MetaTransactionExecuted",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xaD78260E9127685227635659191430528ca292Bd",
      "transactionHash": "0xe646442383bb3bf6fc4c0d6d869d969ad051a63cdd2373ebae6669475fbd3568"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-10T08:39:39.278Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "addInitialMarketTypesAndStart(uint64,address,address)": {
        "details": "Start the initial market.\r"
      },
      "addNewMarketCurrency(address,uint64)": {
        "details": "Add new market currency.\r"
      },
      "addNewMarketType(uint64,uint64,uint64)": {
        "details": "Add new market type.\r",
        "params": {
          "_marketStartTime": "The time at which market will create.\r",
          "_optionRangePerc": "Option range percent of neutral min, max options (raised by 2 decimals)\r",
          "_predictionTime": "The time duration of market.\r"
        }
      },
      "burnDisputedProposalTokens(uint256)": {
        "details": "Burns the tokens of member who raised the dispute, if dispute is rejected.\r",
        "params": {
          "_proposalId": "Id of dispute resolution proposal\r"
        }
      },
      "callClaimedEvent(address,uint256[],address[],uint256,address)": {
        "details": "Emits the claimed event.\r",
        "params": {
          "_reward": "The reward which is claimed by user.\r",
          "_user": "The address who claim their reward.\r",
          "incentiveToken": "The incentive tokens of user.\r",
          "incentives": "The incentives of user.\r",
          "predictionAssets": "The prediction assets of user.\r"
        }
      },
      "callMarketResultEvent(uint256[],uint256,uint256,uint256)": {
        "details": "Emits the MarketResult event.\r",
        "params": {
          "_totalReward": "The amount of reward to be distribute.\r",
          "closeValue": "The closing value of the market currency.\r",
          "winningOption": "The winning option of the market.\r"
        }
      },
      "claimCreationReward()": {
        "details": "function to reward user for initiating market creation calls\r"
      },
      "claimPendingReturn(uint256)": {
        "details": "Claim the pending return of the market.\r",
        "params": {
          "maxRecords": "Maximum number of records to claim reward for\r"
        }
      },
      "createGovernanceProposal(string,string,string,bytes,uint256,address,uint256,uint256,uint256)": {
        "details": "Create proposal if user wants to raise the dispute.\r",
        "params": {
          "_stakeForDispute": "The token staked to raise the diospute.\r",
          "_user": "The address who raises the dispute.\r",
          "action": "The encoded action for solution.\r",
          "description": "The description of dispute.\r",
          "proposalTitle": "The title of proposal created by user.\r",
          "solutionHash": "The ipfs solution hash.\r"
        }
      },
      "createMarket(uint256,uint256)": {
        "details": "Creates the new market\r",
        "params": {
          "_marketCurrencyIndex": "the index of market currency.\r",
          "_marketType": "The type of the market.\r"
        }
      },
      "executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)": {
        "params": {
          "functionSignature": "Signature of the actual function to be called via meta transaction",
          "sigR": "R part of the signature",
          "sigS": "S part of the signature",
          "sigV": "V part of the signature",
          "userAddress": "Address of user trying to do meta transaction"
        }
      },
      "getMarketDetails(address)": {
        "details": "Gets the market details of the specified address.\r",
        "params": {
          "_marketAdd": "The market address to query the details of market.\r"
        },
        "return": "_feedsource bytes32 representing the currency or stock name of the market.\rminvalue uint[] memory representing the minimum range of all the options of the market.\rmaxvalue uint[] memory representing the maximum range of all the options of the market.\roptionprice uint[] memory representing the option price of each option ranges of the market.\r_ethStaked uint[] memory representing the ether staked on each option ranges of the market.\r_plotStaked uint[] memory representing the plot staked on each option ranges of the market.\r_predictionType uint representing the type of market.\r_expireTime uint representing the expire time of the market.\r_predictionStatus uint representing the status of the market.\r"
      },
      "getMarketDetailsUser(address,uint256,uint256)": {
        "details": "Gets the market details of the specified user address.\r",
        "params": {
          "fromIndex": "The index to query the details from.\r",
          "toIndex": "The index to query the details to\r",
          "user": "The address to query the details of market.\r"
        },
        "return": "_market address[] memory representing the address of the market.\r_winnigOption uint256[] memory representing the winning option range of the market.\r"
      },
      "getOpenMarkets()": {
        "details": "Gets the addresses of open markets.\r",
        "return": "_openMarkets address[] memory representing the open market addresses.\r_marketTypes uint256[] memory representing the open market types.\r"
      },
      "getTotalAssetStakedByUser(address)": {
        "details": "Get total assets staked by user in PlotX platform\r",
        "return": "_plotStaked Total PLOT staked by user\r_ethStaked Total ETH staked by user\r"
      },
      "getUintParameters(bytes8)": {
        "details": "Get uint config parameters\r"
      },
      "initiate(address,address,address,address[])": {
        "details": "Initialize the PlotX MarketRegistry.\r",
        "params": {
          "_defaultAddress": "Address authorized to start initial markets\r",
          "_marketUtility": "The address of market config.\r",
          "_plotToken": "The instance of PlotX token.\r"
        }
      },
      "isAuthorizedToGovern(address)": {
        "details": "checks if an address is authorized to govern"
      },
      "isMarket(address)": {
        "details": "Checks if given addres is valid market address.\r"
      },
      "pauseMarketCreation()": {
        "details": "Updates Flag to pause creation of market.\r"
      },
      "resolveDispute(address,uint256)": {
        "details": "Resolve the dispute if wrong value passed at the time of market result declaration.\r",
        "params": {
          "_marketAddress": "The address specify the market.\r",
          "_result": "The final result of the market.\r"
        }
      },
      "resumeMarketCreation()": {
        "details": "Updates Flag to resume creation of market.\r"
      },
      "setMasterAddress()": {
        "details": "Changes the master address and update it's instance\r"
      },
      "setUserGlobalPredictionData(address,uint256,uint256,address,uint256,uint256)": {
        "details": "Emits the PlacePrediction event and sets the user data.\r",
        "params": {
          "_leverage": "The leverage selected by user at the time of place prediction.\r",
          "_prediction": "The option range on which user placed prediction.\r",
          "_predictionAsset": "The prediction assets user will get.\r",
          "_predictionPoints": "The positions user will get.\r",
          "_user": "The address who placed prediction.\r",
          "_value": "The amount of ether user staked.\r"
        }
      },
      "transferAssets(address,address,uint256)": {
        "details": "Transfer `_amount` number of market registry assets contract to `_to` address\r"
      },
      "updateMarketImplementations(uint256[],address[])": {
        "details": "Update the implementations of the market.\r"
      },
      "upgradeContractImplementation(address,address)": {
        "details": "Upgrade the implementations of the contract.\r",
        "params": {
          "_newImplementation": "Address of new implementation contract\r",
          "_proxyAddress": "the proxy address.\r"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "executeMetaTransaction(address,bytes,bytes32,bytes32,uint8)": {
        "notice": "Main function to be called when user wants to execute meta transaction. The actual function to be called should be passed as param with name functionSignature Here the basic signature recovery is being used. Signature is expected to be generated using personal_sign method."
      }
    }
  }
}